// Do not modify this file. It's generated by Framework.Cli.

namespace Database.dbo
{
    using Framework.Dal;
    using System;

    [SqlTable("dbo", "AWBuildVersion")]
    public class AWBuildVersion : Row
    {
        [SqlField("SystemInformationID", true, FrameworkTypeEnum.Tinyint)]
        public Byte SystemInformationID { get; set; }

        [SqlField("Database Version", FrameworkTypeEnum.Nvarcahr)]
        public string DatabaseVersion { get; set; }

        [SqlField("VersionDate", FrameworkTypeEnum.Datetime)]
        public DateTime VersionDate { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("dbo", "DatabaseLog")]
    public class DatabaseLog : Row
    {
        [SqlField("DatabaseLogID", true, FrameworkTypeEnum.Int)]
        public int DatabaseLogID { get; set; }

        [SqlField("PostTime", FrameworkTypeEnum.Datetime)]
        public DateTime PostTime { get; set; }

        [SqlField("DatabaseUser", FrameworkTypeEnum.Nvarcahr)]
        public string DatabaseUser { get; set; }

        [SqlField("Event", FrameworkTypeEnum.Nvarcahr)]
        public string Event { get; set; }

        [SqlField("Schema", FrameworkTypeEnum.Nvarcahr)]
        public string Schema { get; set; }

        [SqlField("Object", FrameworkTypeEnum.Nvarcahr)]
        public string Object { get; set; }

        [SqlField("TSQL", FrameworkTypeEnum.Nvarcahr)]
        public string TSQL { get; set; }

    }

    [SqlTable("dbo", "ErrorLog")]
    public class ErrorLog : Row
    {
        [SqlField("ErrorLogID", true, FrameworkTypeEnum.Int)]
        public int ErrorLogID { get; set; }

        [SqlField("ErrorTime", FrameworkTypeEnum.Datetime)]
        public DateTime ErrorTime { get; set; }

        [SqlField("UserName", FrameworkTypeEnum.Nvarcahr)]
        public string UserName { get; set; }

        [SqlField("ErrorNumber", FrameworkTypeEnum.Int)]
        public int ErrorNumber { get; set; }

        [SqlField("ErrorSeverity", FrameworkTypeEnum.Int)]
        public int? ErrorSeverity { get; set; }

        [SqlField("ErrorState", FrameworkTypeEnum.Int)]
        public int? ErrorState { get; set; }

        [SqlField("ErrorProcedure", FrameworkTypeEnum.Nvarcahr)]
        public string ErrorProcedure { get; set; }

        [SqlField("ErrorLine", FrameworkTypeEnum.Int)]
        public int? ErrorLine { get; set; }

        [SqlField("ErrorMessage", FrameworkTypeEnum.Nvarcahr)]
        public string ErrorMessage { get; set; }
    }

    [SqlTable("dbo", "HelloWorld")]
    public class HelloWorld : Row
    {
        [SqlField("Id", true, FrameworkTypeEnum.Int)]
        public int Id { get; set; }

        [SqlField("Text", FrameworkTypeEnum.Nvarcahr)]
        public string Text { get; set; }

        [SqlField("Number", FrameworkTypeEnum.Float)]
        public double? Number { get; set; }
    }

    [SqlTable("dbo", "LoginUser")]
    public class LoginUser : Row
    {
        [SqlField("Id", true, FrameworkTypeEnum.Int)]
        public int Id { get; set; }

        [SqlField("UserName", FrameworkTypeEnum.Nvarcahr)]
        public string UserName { get; set; }

        [SqlField("Password", FrameworkTypeEnum.Nvarcahr)]
        public string Password { get; set; }

        [SqlField("Email", FrameworkTypeEnum.Nvarcahr)]
        public string Email { get; set; }

        [SqlField("Value", FrameworkTypeEnum.Float)]
        public double? Value { get; set; }

        [SqlField("ValueUOM", FrameworkTypeEnum.Nvarcahr)]
        public string ValueUOM { get; set; }

        [SqlField("IsActive", FrameworkTypeEnum.Bit)]
        public bool IsActive { get; set; }
    }

    [SqlTable("dbo", "LoginUserRole")]
    public class LoginUserRole : Row
    {
        [SqlField("Id", true, FrameworkTypeEnum.Int)]
        public int Id { get; set; }

        [SqlField("RoleName", FrameworkTypeEnum.Nvarcahr)]
        public string RoleName { get; set; }

        [SqlField("IsActive", FrameworkTypeEnum.Bit)]
        public bool IsActive { get; set; }
    }

    [SqlTable("dbo", "LoginUserRoleDisplay")]
    public class LoginUserRoleDisplay : Row
    {
        [SqlField("UserId", FrameworkTypeEnum.Int)]
        public int UserId { get; set; }

        [SqlField("UserRoleId", FrameworkTypeEnum.Int)]
        public int UserRoleId { get; set; }

        [SqlField("UserRoleName", FrameworkTypeEnum.Nvarcahr)]
        public string UserRoleName { get; set; }

        [SqlField("UserUserRoleId", FrameworkTypeEnum.Int)]
        public int? UserUserRoleId { get; set; }

        [SqlField("IsActive", FrameworkTypeEnum.Bit)]
        public bool? IsActive { get; set; }
    }

    [SqlTable("dbo", "LoginUserUserRole")]
    public class LoginUserUserRole : Row
    {
        [SqlField("Id", true, FrameworkTypeEnum.Int)]
        public int Id { get; set; }

        [SqlField("UserId", FrameworkTypeEnum.Int)]
        public int UserId { get; set; }

        [SqlField("UserRoleId", FrameworkTypeEnum.Int)]
        public int UserRoleId { get; set; }

        [SqlField("IsActive", FrameworkTypeEnum.Bit)]
        public bool IsActive { get; set; }
    }

    [SqlTable("dbo", "Wait")]
    public class Wait : Row
    {
        [SqlField("Value", FrameworkTypeEnum.Int)]
        public int? Value { get; set; }
    }
}

namespace Database.HumanResources
{
    using Framework.Dal;
    using System;

    [SqlTable("HumanResources", "Department")]
    public class Department : Row
    {
        [SqlField("DepartmentID", true, FrameworkTypeEnum.Smallint)]
        public Int16 DepartmentID { get; set; }

        [SqlField("Name", FrameworkTypeEnum.Nvarcahr)]
        public string Name { get; set; }

        [SqlField("GroupName", FrameworkTypeEnum.Nvarcahr)]
        public string GroupName { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("HumanResources", "Employee")]
    public class Employee : Row
    {
        [SqlField("BusinessEntityID", true, FrameworkTypeEnum.Int)]
        public int BusinessEntityID { get; set; }

        [SqlField("NationalIDNumber", FrameworkTypeEnum.Nvarcahr)]
        public string NationalIDNumber { get; set; }

        [SqlField("LoginID", FrameworkTypeEnum.Nvarcahr)]
        public string LoginID { get; set; }


        [SqlField("OrganizationLevel", FrameworkTypeEnum.Smallint)]
        public Int16? OrganizationLevel { get; set; }

        [SqlField("JobTitle", FrameworkTypeEnum.Nvarcahr)]
        public string JobTitle { get; set; }

        [SqlField("BirthDate", FrameworkTypeEnum.Date)]
        public DateTime BirthDate { get; set; }

        [SqlField("MaritalStatus", FrameworkTypeEnum.NChar)]
        public string MaritalStatus { get; set; }

        [SqlField("Gender", FrameworkTypeEnum.NChar)]
        public string Gender { get; set; }

        [SqlField("HireDate", FrameworkTypeEnum.Date)]
        public DateTime HireDate { get; set; }

        [SqlField("SalariedFlag", FrameworkTypeEnum.Bit)]
        public bool SalariedFlag { get; set; }

        [SqlField("VacationHours", FrameworkTypeEnum.Smallint)]
        public Int16 VacationHours { get; set; }

        [SqlField("SickLeaveHours", FrameworkTypeEnum.Smallint)]
        public Int16 SickLeaveHours { get; set; }

        [SqlField("CurrentFlag", FrameworkTypeEnum.Bit)]
        public bool CurrentFlag { get; set; }

        [SqlField("rowguid", FrameworkTypeEnum.Uniqueidentifier)]
        public Guid rowguid { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("HumanResources", "EmployeeDepartmentHistory")]
    public class EmployeeDepartmentHistory : Row
    {
        [SqlField("BusinessEntityID", true, FrameworkTypeEnum.Int)]
        public int BusinessEntityID { get; set; }

        [SqlField("DepartmentID", true, FrameworkTypeEnum.Smallint)]
        public Int16 DepartmentID { get; set; }

        [SqlField("ShiftID", true, FrameworkTypeEnum.Tinyint)]
        public Byte ShiftID { get; set; }

        [SqlField("StartDate", true, FrameworkTypeEnum.Date)]
        public DateTime StartDate { get; set; }

        [SqlField("EndDate", FrameworkTypeEnum.Date)]
        public DateTime? EndDate { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("HumanResources", "EmployeePayHistory")]
    public class EmployeePayHistory : Row
    {
        [SqlField("BusinessEntityID", true, FrameworkTypeEnum.Int)]
        public int BusinessEntityID { get; set; }

        [SqlField("RateChangeDate", true, FrameworkTypeEnum.Datetime)]
        public DateTime RateChangeDate { get; set; }

        [SqlField("Rate", FrameworkTypeEnum.Money)]
        public Decimal Rate { get; set; }

        [SqlField("PayFrequency", FrameworkTypeEnum.Tinyint)]
        public Byte PayFrequency { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("HumanResources", "JobCandidate")]
    public class JobCandidate : Row
    {
        [SqlField("JobCandidateID", true, FrameworkTypeEnum.Int)]
        public int JobCandidateID { get; set; }

        [SqlField("BusinessEntityID", FrameworkTypeEnum.Int)]
        public int? BusinessEntityID { get; set; }


        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("HumanResources", "Shift")]
    public class Shift : Row
    {
        [SqlField("ShiftID", true, FrameworkTypeEnum.Tinyint)]
        public Byte ShiftID { get; set; }

        [SqlField("Name", FrameworkTypeEnum.Nvarcahr)]
        public string Name { get; set; }



        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("HumanResources", "vEmployee")]
    public class vEmployee : Row
    {
        [SqlField("BusinessEntityID", FrameworkTypeEnum.Int)]
        public int BusinessEntityID { get; set; }

        [SqlField("Title", FrameworkTypeEnum.Nvarcahr)]
        public string Title { get; set; }

        [SqlField("FirstName", FrameworkTypeEnum.Nvarcahr)]
        public string FirstName { get; set; }

        [SqlField("MiddleName", FrameworkTypeEnum.Nvarcahr)]
        public string MiddleName { get; set; }

        [SqlField("LastName", FrameworkTypeEnum.Nvarcahr)]
        public string LastName { get; set; }

        [SqlField("Suffix", FrameworkTypeEnum.Nvarcahr)]
        public string Suffix { get; set; }

        [SqlField("JobTitle", FrameworkTypeEnum.Nvarcahr)]
        public string JobTitle { get; set; }

        [SqlField("PhoneNumber", FrameworkTypeEnum.Nvarcahr)]
        public string PhoneNumber { get; set; }

        [SqlField("PhoneNumberType", FrameworkTypeEnum.Nvarcahr)]
        public string PhoneNumberType { get; set; }

        [SqlField("EmailAddress", FrameworkTypeEnum.Nvarcahr)]
        public string EmailAddress { get; set; }

        [SqlField("EmailPromotion", FrameworkTypeEnum.Int)]
        public int EmailPromotion { get; set; }

        [SqlField("AddressLine1", FrameworkTypeEnum.Nvarcahr)]
        public string AddressLine1 { get; set; }

        [SqlField("AddressLine2", FrameworkTypeEnum.Nvarcahr)]
        public string AddressLine2 { get; set; }

        [SqlField("City", FrameworkTypeEnum.Nvarcahr)]
        public string City { get; set; }

        [SqlField("StateProvinceName", FrameworkTypeEnum.Nvarcahr)]
        public string StateProvinceName { get; set; }

        [SqlField("PostalCode", FrameworkTypeEnum.Nvarcahr)]
        public string PostalCode { get; set; }

        [SqlField("CountryRegionName", FrameworkTypeEnum.Nvarcahr)]
        public string CountryRegionName { get; set; }

    }

    [SqlTable("HumanResources", "vEmployeeDepartment")]
    public class vEmployeeDepartment : Row
    {
        [SqlField("BusinessEntityID", FrameworkTypeEnum.Int)]
        public int BusinessEntityID { get; set; }

        [SqlField("Title", FrameworkTypeEnum.Nvarcahr)]
        public string Title { get; set; }

        [SqlField("FirstName", FrameworkTypeEnum.Nvarcahr)]
        public string FirstName { get; set; }

        [SqlField("MiddleName", FrameworkTypeEnum.Nvarcahr)]
        public string MiddleName { get; set; }

        [SqlField("LastName", FrameworkTypeEnum.Nvarcahr)]
        public string LastName { get; set; }

        [SqlField("Suffix", FrameworkTypeEnum.Nvarcahr)]
        public string Suffix { get; set; }

        [SqlField("JobTitle", FrameworkTypeEnum.Nvarcahr)]
        public string JobTitle { get; set; }

        [SqlField("Department", FrameworkTypeEnum.Nvarcahr)]
        public string Department { get; set; }

        [SqlField("GroupName", FrameworkTypeEnum.Nvarcahr)]
        public string GroupName { get; set; }

        [SqlField("StartDate", FrameworkTypeEnum.Date)]
        public DateTime StartDate { get; set; }
    }

    [SqlTable("HumanResources", "vEmployeeDepartmentHistory")]
    public class vEmployeeDepartmentHistory : Row
    {
        [SqlField("BusinessEntityID", FrameworkTypeEnum.Int)]
        public int BusinessEntityID { get; set; }

        [SqlField("Title", FrameworkTypeEnum.Nvarcahr)]
        public string Title { get; set; }

        [SqlField("FirstName", FrameworkTypeEnum.Nvarcahr)]
        public string FirstName { get; set; }

        [SqlField("MiddleName", FrameworkTypeEnum.Nvarcahr)]
        public string MiddleName { get; set; }

        [SqlField("LastName", FrameworkTypeEnum.Nvarcahr)]
        public string LastName { get; set; }

        [SqlField("Suffix", FrameworkTypeEnum.Nvarcahr)]
        public string Suffix { get; set; }

        [SqlField("Shift", FrameworkTypeEnum.Nvarcahr)]
        public string Shift { get; set; }

        [SqlField("Department", FrameworkTypeEnum.Nvarcahr)]
        public string Department { get; set; }

        [SqlField("GroupName", FrameworkTypeEnum.Nvarcahr)]
        public string GroupName { get; set; }

        [SqlField("StartDate", FrameworkTypeEnum.Date)]
        public DateTime StartDate { get; set; }

        [SqlField("EndDate", FrameworkTypeEnum.Date)]
        public DateTime? EndDate { get; set; }
    }

    [SqlTable("HumanResources", "vJobCandidate")]
    public class vJobCandidate : Row
    {
        [SqlField("JobCandidateID", FrameworkTypeEnum.Int)]
        public int JobCandidateID { get; set; }

        [SqlField("BusinessEntityID", FrameworkTypeEnum.Int)]
        public int? BusinessEntityID { get; set; }

        [SqlField("Name.Prefix", FrameworkTypeEnum.Nvarcahr)]
        public string NamePrefix { get; set; }

        [SqlField("Name.First", FrameworkTypeEnum.Nvarcahr)]
        public string NameFirst { get; set; }

        [SqlField("Name.Middle", FrameworkTypeEnum.Nvarcahr)]
        public string NameMiddle { get; set; }

        [SqlField("Name.Last", FrameworkTypeEnum.Nvarcahr)]
        public string NameLast { get; set; }

        [SqlField("Name.Suffix", FrameworkTypeEnum.Nvarcahr)]
        public string NameSuffix { get; set; }

        [SqlField("Skills", FrameworkTypeEnum.Nvarcahr)]
        public string Skills { get; set; }

        [SqlField("Addr.Type", FrameworkTypeEnum.Nvarcahr)]
        public string AddrType { get; set; }

        [SqlField("Addr.Loc.CountryRegion", FrameworkTypeEnum.Nvarcahr)]
        public string AddrLocCountryRegion { get; set; }

        [SqlField("Addr.Loc.State", FrameworkTypeEnum.Nvarcahr)]
        public string AddrLocState { get; set; }

        [SqlField("Addr.Loc.City", FrameworkTypeEnum.Nvarcahr)]
        public string AddrLocCity { get; set; }

        [SqlField("Addr.PostalCode", FrameworkTypeEnum.Nvarcahr)]
        public string AddrPostalCode { get; set; }

        [SqlField("EMail", FrameworkTypeEnum.Nvarcahr)]
        public string EMail { get; set; }

        [SqlField("WebSite", FrameworkTypeEnum.Nvarcahr)]
        public string WebSite { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("HumanResources", "vJobCandidateEducation")]
    public class vJobCandidateEducation : Row
    {
        [SqlField("JobCandidateID", FrameworkTypeEnum.Int)]
        public int JobCandidateID { get; set; }

        [SqlField("Edu.Level", FrameworkTypeEnum.Nvarcahr)]
        public string EduLevel { get; set; }

        [SqlField("Edu.StartDate", FrameworkTypeEnum.Datetime)]
        public DateTime? EduStartDate { get; set; }

        [SqlField("Edu.EndDate", FrameworkTypeEnum.Datetime)]
        public DateTime? EduEndDate { get; set; }

        [SqlField("Edu.Degree", FrameworkTypeEnum.Nvarcahr)]
        public string EduDegree { get; set; }

        [SqlField("Edu.Major", FrameworkTypeEnum.Nvarcahr)]
        public string EduMajor { get; set; }

        [SqlField("Edu.Minor", FrameworkTypeEnum.Nvarcahr)]
        public string EduMinor { get; set; }

        [SqlField("Edu.GPA", FrameworkTypeEnum.Nvarcahr)]
        public string EduGPA { get; set; }

        [SqlField("Edu.GPAScale", FrameworkTypeEnum.Nvarcahr)]
        public string EduGPAScale { get; set; }

        [SqlField("Edu.School", FrameworkTypeEnum.Nvarcahr)]
        public string EduSchool { get; set; }

        [SqlField("Edu.Loc.CountryRegion", FrameworkTypeEnum.Nvarcahr)]
        public string EduLocCountryRegion { get; set; }

        [SqlField("Edu.Loc.State", FrameworkTypeEnum.Nvarcahr)]
        public string EduLocState { get; set; }

        [SqlField("Edu.Loc.City", FrameworkTypeEnum.Nvarcahr)]
        public string EduLocCity { get; set; }
    }

    [SqlTable("HumanResources", "vJobCandidateEmployment")]
    public class vJobCandidateEmployment : Row
    {
        [SqlField("JobCandidateID", FrameworkTypeEnum.Int)]
        public int JobCandidateID { get; set; }

        [SqlField("Emp.StartDate", FrameworkTypeEnum.Datetime)]
        public DateTime? EmpStartDate { get; set; }

        [SqlField("Emp.EndDate", FrameworkTypeEnum.Datetime)]
        public DateTime? EmpEndDate { get; set; }

        [SqlField("Emp.OrgName", FrameworkTypeEnum.Nvarcahr)]
        public string EmpOrgName { get; set; }

        [SqlField("Emp.JobTitle", FrameworkTypeEnum.Nvarcahr)]
        public string EmpJobTitle { get; set; }

        [SqlField("Emp.Responsibility", FrameworkTypeEnum.Nvarcahr)]
        public string EmpResponsibility { get; set; }

        [SqlField("Emp.FunctionCategory", FrameworkTypeEnum.Nvarcahr)]
        public string EmpFunctionCategory { get; set; }

        [SqlField("Emp.IndustryCategory", FrameworkTypeEnum.Nvarcahr)]
        public string EmpIndustryCategory { get; set; }

        [SqlField("Emp.Loc.CountryRegion", FrameworkTypeEnum.Nvarcahr)]
        public string EmpLocCountryRegion { get; set; }

        [SqlField("Emp.Loc.State", FrameworkTypeEnum.Nvarcahr)]
        public string EmpLocState { get; set; }

        [SqlField("Emp.Loc.City", FrameworkTypeEnum.Nvarcahr)]
        public string EmpLocCity { get; set; }
    }
}

namespace Database.Person
{
    using Framework.Dal;
    using System;

    [SqlTable("Person", "Address")]
    public class Address : Row
    {
        [SqlField("AddressID", true, FrameworkTypeEnum.Int)]
        public int AddressID { get; set; }

        [SqlField("AddressLine1", FrameworkTypeEnum.Nvarcahr)]
        public string AddressLine1 { get; set; }

        [SqlField("AddressLine2", FrameworkTypeEnum.Nvarcahr)]
        public string AddressLine2 { get; set; }

        [SqlField("City", FrameworkTypeEnum.Nvarcahr)]
        public string City { get; set; }

        [SqlField("StateProvinceID", FrameworkTypeEnum.Int)]
        public int StateProvinceID { get; set; }

        [SqlField("PostalCode", FrameworkTypeEnum.Nvarcahr)]
        public string PostalCode { get; set; }


        [SqlField("rowguid", FrameworkTypeEnum.Uniqueidentifier)]
        public Guid rowguid { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Person", "AddressType")]
    public class AddressType : Row
    {
        [SqlField("AddressTypeID", true, FrameworkTypeEnum.Int)]
        public int AddressTypeID { get; set; }

        [SqlField("Name", FrameworkTypeEnum.Nvarcahr)]
        public string Name { get; set; }

        [SqlField("rowguid", FrameworkTypeEnum.Uniqueidentifier)]
        public Guid rowguid { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Person", "BusinessEntity")]
    public class BusinessEntity : Row
    {
        [SqlField("BusinessEntityID", true, FrameworkTypeEnum.Int)]
        public int BusinessEntityID { get; set; }

        [SqlField("rowguid", FrameworkTypeEnum.Uniqueidentifier)]
        public Guid rowguid { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Person", "BusinessEntityAddress")]
    public class BusinessEntityAddress : Row
    {
        [SqlField("BusinessEntityID", true, FrameworkTypeEnum.Int)]
        public int BusinessEntityID { get; set; }

        [SqlField("AddressID", true, FrameworkTypeEnum.Int)]
        public int AddressID { get; set; }

        [SqlField("AddressTypeID", true, FrameworkTypeEnum.Int)]
        public int AddressTypeID { get; set; }

        [SqlField("rowguid", FrameworkTypeEnum.Uniqueidentifier)]
        public Guid rowguid { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Person", "BusinessEntityContact")]
    public class BusinessEntityContact : Row
    {
        [SqlField("BusinessEntityID", true, FrameworkTypeEnum.Int)]
        public int BusinessEntityID { get; set; }

        [SqlField("PersonID", true, FrameworkTypeEnum.Int)]
        public int PersonID { get; set; }

        [SqlField("ContactTypeID", true, FrameworkTypeEnum.Int)]
        public int ContactTypeID { get; set; }

        [SqlField("rowguid", FrameworkTypeEnum.Uniqueidentifier)]
        public Guid rowguid { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Person", "ContactType")]
    public class ContactType : Row
    {
        [SqlField("ContactTypeID", true, FrameworkTypeEnum.Int)]
        public int ContactTypeID { get; set; }

        [SqlField("Name", FrameworkTypeEnum.Nvarcahr)]
        public string Name { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Person", "CountryRegion")]
    public class CountryRegion : Row
    {
        [SqlField("CountryRegionCode", true, FrameworkTypeEnum.Nvarcahr)]
        public string CountryRegionCode { get; set; }

        [SqlField("Name", FrameworkTypeEnum.Nvarcahr)]
        public string Name { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Person", "EmailAddress")]
    public class EmailAddress : Row
    {
        [SqlField("BusinessEntityID", true, FrameworkTypeEnum.Int)]
        public int BusinessEntityID { get; set; }

        [SqlField("EmailAddressID", true, FrameworkTypeEnum.Int)]
        public int EmailAddressID { get; set; }

        [SqlField("EmailAddress", FrameworkTypeEnum.Nvarcahr)]
        public string EmailAddress2 { get; set; }

        [SqlField("rowguid", FrameworkTypeEnum.Uniqueidentifier)]
        public Guid rowguid { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Person", "Password")]
    public class Password : Row
    {
        [SqlField("BusinessEntityID", true, FrameworkTypeEnum.Int)]
        public int BusinessEntityID { get; set; }

        [SqlField("PasswordHash", FrameworkTypeEnum.Varchar)]
        public string PasswordHash { get; set; }

        [SqlField("PasswordSalt", FrameworkTypeEnum.Varchar)]
        public string PasswordSalt { get; set; }

        [SqlField("rowguid", FrameworkTypeEnum.Uniqueidentifier)]
        public Guid rowguid { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Person", "Person")]
    public class Person : Row
    {
        [SqlField("BusinessEntityID", true, FrameworkTypeEnum.Int)]
        public int BusinessEntityID { get; set; }

        [SqlField("PersonType", FrameworkTypeEnum.NChar)]
        public string PersonType { get; set; }

        [SqlField("NameStyle", FrameworkTypeEnum.Bit)]
        public bool NameStyle { get; set; }

        [SqlField("Title", FrameworkTypeEnum.Nvarcahr)]
        public string Title { get; set; }

        [SqlField("FirstName", FrameworkTypeEnum.Nvarcahr)]
        public string FirstName { get; set; }

        [SqlField("MiddleName", FrameworkTypeEnum.Nvarcahr)]
        public string MiddleName { get; set; }

        [SqlField("LastName", FrameworkTypeEnum.Nvarcahr)]
        public string LastName { get; set; }

        [SqlField("Suffix", FrameworkTypeEnum.Nvarcahr)]
        public string Suffix { get; set; }

        [SqlField("EmailPromotion", FrameworkTypeEnum.Int)]
        public int EmailPromotion { get; set; }



        [SqlField("rowguid", FrameworkTypeEnum.Uniqueidentifier)]
        public Guid rowguid { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Person", "PersonPhone")]
    public class PersonPhone : Row
    {
        [SqlField("BusinessEntityID", true, FrameworkTypeEnum.Int)]
        public int BusinessEntityID { get; set; }

        [SqlField("PhoneNumber", true, FrameworkTypeEnum.Nvarcahr)]
        public string PhoneNumber { get; set; }

        [SqlField("PhoneNumberTypeID", true, FrameworkTypeEnum.Int)]
        public int PhoneNumberTypeID { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Person", "PhoneNumberType")]
    public class PhoneNumberType : Row
    {
        [SqlField("PhoneNumberTypeID", true, FrameworkTypeEnum.Int)]
        public int PhoneNumberTypeID { get; set; }

        [SqlField("Name", FrameworkTypeEnum.Nvarcahr)]
        public string Name { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Person", "StateProvince")]
    public class StateProvince : Row
    {
        [SqlField("StateProvinceID", true, FrameworkTypeEnum.Int)]
        public int StateProvinceID { get; set; }

        [SqlField("StateProvinceCode", FrameworkTypeEnum.NChar)]
        public string StateProvinceCode { get; set; }

        [SqlField("CountryRegionCode", FrameworkTypeEnum.Nvarcahr)]
        public string CountryRegionCode { get; set; }

        [SqlField("IsOnlyStateProvinceFlag", FrameworkTypeEnum.Bit)]
        public bool IsOnlyStateProvinceFlag { get; set; }

        [SqlField("Name", FrameworkTypeEnum.Nvarcahr)]
        public string Name { get; set; }

        [SqlField("TerritoryID", FrameworkTypeEnum.Int)]
        public int TerritoryID { get; set; }

        [SqlField("rowguid", FrameworkTypeEnum.Uniqueidentifier)]
        public Guid rowguid { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Person", "vAdditionalContactInfo")]
    public class vAdditionalContactInfo : Row
    {
        [SqlField("BusinessEntityID", FrameworkTypeEnum.Int)]
        public int BusinessEntityID { get; set; }

        [SqlField("FirstName", FrameworkTypeEnum.Nvarcahr)]
        public string FirstName { get; set; }

        [SqlField("MiddleName", FrameworkTypeEnum.Nvarcahr)]
        public string MiddleName { get; set; }

        [SqlField("LastName", FrameworkTypeEnum.Nvarcahr)]
        public string LastName { get; set; }

        [SqlField("TelephoneNumber", FrameworkTypeEnum.Nvarcahr)]
        public string TelephoneNumber { get; set; }

        [SqlField("TelephoneSpecialInstructions", FrameworkTypeEnum.Nvarcahr)]
        public string TelephoneSpecialInstructions { get; set; }

        [SqlField("Street", FrameworkTypeEnum.Nvarcahr)]
        public string Street { get; set; }

        [SqlField("City", FrameworkTypeEnum.Nvarcahr)]
        public string City { get; set; }

        [SqlField("StateProvince", FrameworkTypeEnum.Nvarcahr)]
        public string StateProvince { get; set; }

        [SqlField("PostalCode", FrameworkTypeEnum.Nvarcahr)]
        public string PostalCode { get; set; }

        [SqlField("CountryRegion", FrameworkTypeEnum.Nvarcahr)]
        public string CountryRegion { get; set; }

        [SqlField("HomeAddressSpecialInstructions", FrameworkTypeEnum.Nvarcahr)]
        public string HomeAddressSpecialInstructions { get; set; }

        [SqlField("EMailAddress", FrameworkTypeEnum.Nvarcahr)]
        public string EMailAddress { get; set; }

        [SqlField("EMailSpecialInstructions", FrameworkTypeEnum.Nvarcahr)]
        public string EMailSpecialInstructions { get; set; }

        [SqlField("EMailTelephoneNumber", FrameworkTypeEnum.Nvarcahr)]
        public string EMailTelephoneNumber { get; set; }

        [SqlField("rowguid", FrameworkTypeEnum.Uniqueidentifier)]
        public Guid rowguid { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Person", "vStateProvinceCountryRegion")]
    public class vStateProvinceCountryRegion : Row
    {
        [SqlField("StateProvinceID", FrameworkTypeEnum.Int)]
        public int StateProvinceID { get; set; }

        [SqlField("StateProvinceCode", FrameworkTypeEnum.NChar)]
        public string StateProvinceCode { get; set; }

        [SqlField("IsOnlyStateProvinceFlag", FrameworkTypeEnum.Bit)]
        public bool IsOnlyStateProvinceFlag { get; set; }

        [SqlField("StateProvinceName", FrameworkTypeEnum.Nvarcahr)]
        public string StateProvinceName { get; set; }

        [SqlField("TerritoryID", FrameworkTypeEnum.Int)]
        public int TerritoryID { get; set; }

        [SqlField("CountryRegionCode", FrameworkTypeEnum.Nvarcahr)]
        public string CountryRegionCode { get; set; }

        [SqlField("CountryRegionName", FrameworkTypeEnum.Nvarcahr)]
        public string CountryRegionName { get; set; }
    }
}

namespace Database.Production
{
    using Framework.Dal;
    using System;

    [SqlTable("Production", "BillOfMaterials")]
    public class BillOfMaterials : Row
    {
        [SqlField("BillOfMaterialsID", true, FrameworkTypeEnum.Int)]
        public int BillOfMaterialsID { get; set; }

        [SqlField("ProductAssemblyID", FrameworkTypeEnum.Int)]
        public int? ProductAssemblyID { get; set; }

        [SqlField("ComponentID", FrameworkTypeEnum.Int)]
        public int ComponentID { get; set; }

        [SqlField("StartDate", FrameworkTypeEnum.Datetime)]
        public DateTime StartDate { get; set; }

        [SqlField("EndDate", FrameworkTypeEnum.Datetime)]
        public DateTime? EndDate { get; set; }

        [SqlField("UnitMeasureCode", FrameworkTypeEnum.NChar)]
        public string UnitMeasureCode { get; set; }

        [SqlField("BOMLevel", FrameworkTypeEnum.Smallint)]
        public Int16 BOMLevel { get; set; }

        [SqlField("PerAssemblyQty", FrameworkTypeEnum.Decimal)]
        public Decimal PerAssemblyQty { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Production", "Culture")]
    public class Culture : Row
    {
        [SqlField("CultureID", true, FrameworkTypeEnum.NChar)]
        public string CultureID { get; set; }

        [SqlField("Name", FrameworkTypeEnum.Nvarcahr)]
        public string Name { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Production", "Document")]
    public class Document : Row
    {

        [SqlField("DocumentLevel", FrameworkTypeEnum.Smallint)]
        public Int16? DocumentLevel { get; set; }

        [SqlField("Title", FrameworkTypeEnum.Nvarcahr)]
        public string Title { get; set; }

        [SqlField("Owner", FrameworkTypeEnum.Int)]
        public int Owner { get; set; }

        [SqlField("FolderFlag", FrameworkTypeEnum.Bit)]
        public bool FolderFlag { get; set; }

        [SqlField("FileName", FrameworkTypeEnum.Nvarcahr)]
        public string FileName { get; set; }

        [SqlField("FileExtension", FrameworkTypeEnum.Nvarcahr)]
        public string FileExtension { get; set; }

        [SqlField("Revision", FrameworkTypeEnum.NChar)]
        public string Revision { get; set; }

        [SqlField("ChangeNumber", FrameworkTypeEnum.Int)]
        public int ChangeNumber { get; set; }

        [SqlField("Status", FrameworkTypeEnum.Tinyint)]
        public Byte Status { get; set; }

        [SqlField("DocumentSummary", FrameworkTypeEnum.Nvarcahr)]
        public string DocumentSummary { get; set; }

        [SqlField("Document", FrameworkTypeEnum.Varbinary)]
        public byte[] Document2 { get; set; }

        [SqlField("rowguid", FrameworkTypeEnum.Uniqueidentifier)]
        public Guid rowguid { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Production", "Illustration")]
    public class Illustration : Row
    {
        [SqlField("IllustrationID", true, FrameworkTypeEnum.Int)]
        public int IllustrationID { get; set; }


        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Production", "Location")]
    public class Location : Row
    {
        [SqlField("LocationID", true, FrameworkTypeEnum.Smallint)]
        public Int16 LocationID { get; set; }

        [SqlField("Name", FrameworkTypeEnum.Nvarcahr)]
        public string Name { get; set; }

        [SqlField("CostRate", FrameworkTypeEnum.Smallmoney)]
        public Decimal CostRate { get; set; }

        [SqlField("Availability", FrameworkTypeEnum.Decimal)]
        public Decimal Availability { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Production", "Product")]
    public class Product : Row
    {
        [SqlField("ProductID", true, FrameworkTypeEnum.Int)]
        public int ProductID { get; set; }

        [SqlField("Name", FrameworkTypeEnum.Nvarcahr)]
        public string Name { get; set; }

        [SqlField("ProductNumber", FrameworkTypeEnum.Nvarcahr)]
        public string ProductNumber { get; set; }

        [SqlField("MakeFlag", FrameworkTypeEnum.Bit)]
        public bool MakeFlag { get; set; }

        [SqlField("FinishedGoodsFlag", FrameworkTypeEnum.Bit)]
        public bool FinishedGoodsFlag { get; set; }

        [SqlField("Color", FrameworkTypeEnum.Nvarcahr)]
        public string Color { get; set; }

        [SqlField("SafetyStockLevel", FrameworkTypeEnum.Smallint)]
        public Int16 SafetyStockLevel { get; set; }

        [SqlField("ReorderPoint", FrameworkTypeEnum.Smallint)]
        public Int16 ReorderPoint { get; set; }

        [SqlField("StandardCost", FrameworkTypeEnum.Money)]
        public Decimal StandardCost { get; set; }

        [SqlField("ListPrice", FrameworkTypeEnum.Money)]
        public Decimal ListPrice { get; set; }

        [SqlField("Size", FrameworkTypeEnum.Nvarcahr)]
        public string Size { get; set; }

        [SqlField("SizeUnitMeasureCode", FrameworkTypeEnum.NChar)]
        public string SizeUnitMeasureCode { get; set; }

        [SqlField("WeightUnitMeasureCode", FrameworkTypeEnum.NChar)]
        public string WeightUnitMeasureCode { get; set; }

        [SqlField("Weight", FrameworkTypeEnum.Decimal)]
        public Decimal? Weight { get; set; }

        [SqlField("DaysToManufacture", FrameworkTypeEnum.Int)]
        public int DaysToManufacture { get; set; }

        [SqlField("ProductLine", FrameworkTypeEnum.NChar)]
        public string ProductLine { get; set; }

        [SqlField("Class", FrameworkTypeEnum.NChar)]
        public string Class { get; set; }

        [SqlField("Style", FrameworkTypeEnum.NChar)]
        public string Style { get; set; }

        [SqlField("ProductSubcategoryID", FrameworkTypeEnum.Int)]
        public int? ProductSubcategoryID { get; set; }

        [SqlField("ProductModelID", FrameworkTypeEnum.Int)]
        public int? ProductModelID { get; set; }

        [SqlField("SellStartDate", FrameworkTypeEnum.Datetime)]
        public DateTime SellStartDate { get; set; }

        [SqlField("SellEndDate", FrameworkTypeEnum.Datetime)]
        public DateTime? SellEndDate { get; set; }

        [SqlField("DiscontinuedDate", FrameworkTypeEnum.Datetime)]
        public DateTime? DiscontinuedDate { get; set; }

        [SqlField("rowguid", FrameworkTypeEnum.Uniqueidentifier)]
        public Guid rowguid { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Production", "ProductCategory")]
    public class ProductCategory : Row
    {
        [SqlField("ProductCategoryID", true, FrameworkTypeEnum.Int)]
        public int ProductCategoryID { get; set; }

        [SqlField("Name", FrameworkTypeEnum.Nvarcahr)]
        public string Name { get; set; }

        [SqlField("rowguid", FrameworkTypeEnum.Uniqueidentifier)]
        public Guid rowguid { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Production", "ProductCostHistory")]
    public class ProductCostHistory : Row
    {
        [SqlField("ProductID", true, FrameworkTypeEnum.Int)]
        public int ProductID { get; set; }

        [SqlField("StartDate", true, FrameworkTypeEnum.Datetime)]
        public DateTime StartDate { get; set; }

        [SqlField("EndDate", FrameworkTypeEnum.Datetime)]
        public DateTime? EndDate { get; set; }

        [SqlField("StandardCost", FrameworkTypeEnum.Money)]
        public Decimal StandardCost { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Production", "ProductDescription")]
    public class ProductDescription : Row
    {
        [SqlField("ProductDescriptionID", true, FrameworkTypeEnum.Int)]
        public int ProductDescriptionID { get; set; }

        [SqlField("Description", FrameworkTypeEnum.Nvarcahr)]
        public string Description { get; set; }

        [SqlField("rowguid", FrameworkTypeEnum.Uniqueidentifier)]
        public Guid rowguid { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Production", "ProductDocument")]
    public class ProductDocument : Row
    {
        [SqlField("ProductID", true, FrameworkTypeEnum.Int)]
        public int ProductID { get; set; }


        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Production", "ProductInventory")]
    public class ProductInventory : Row
    {
        [SqlField("ProductID", true, FrameworkTypeEnum.Int)]
        public int ProductID { get; set; }

        [SqlField("LocationID", true, FrameworkTypeEnum.Smallint)]
        public Int16 LocationID { get; set; }

        [SqlField("Shelf", FrameworkTypeEnum.Nvarcahr)]
        public string Shelf { get; set; }

        [SqlField("Bin", FrameworkTypeEnum.Tinyint)]
        public Byte Bin { get; set; }

        [SqlField("Quantity", FrameworkTypeEnum.Smallint)]
        public Int16 Quantity { get; set; }

        [SqlField("rowguid", FrameworkTypeEnum.Uniqueidentifier)]
        public Guid rowguid { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Production", "ProductListPriceHistory")]
    public class ProductListPriceHistory : Row
    {
        [SqlField("ProductID", true, FrameworkTypeEnum.Int)]
        public int ProductID { get; set; }

        [SqlField("StartDate", true, FrameworkTypeEnum.Datetime)]
        public DateTime StartDate { get; set; }

        [SqlField("EndDate", FrameworkTypeEnum.Datetime)]
        public DateTime? EndDate { get; set; }

        [SqlField("ListPrice", FrameworkTypeEnum.Money)]
        public Decimal ListPrice { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Production", "ProductModel")]
    public class ProductModel : Row
    {
        [SqlField("ProductModelID", true, FrameworkTypeEnum.Int)]
        public int ProductModelID { get; set; }

        [SqlField("Name", FrameworkTypeEnum.Nvarcahr)]
        public string Name { get; set; }



        [SqlField("rowguid", FrameworkTypeEnum.Uniqueidentifier)]
        public Guid rowguid { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Production", "ProductModelIllustration")]
    public class ProductModelIllustration : Row
    {
        [SqlField("ProductModelID", true, FrameworkTypeEnum.Int)]
        public int ProductModelID { get; set; }

        [SqlField("IllustrationID", true, FrameworkTypeEnum.Int)]
        public int IllustrationID { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Production", "ProductModelProductDescriptionCulture")]
    public class ProductModelProductDescriptionCulture : Row
    {
        [SqlField("ProductModelID", true, FrameworkTypeEnum.Int)]
        public int ProductModelID { get; set; }

        [SqlField("ProductDescriptionID", true, FrameworkTypeEnum.Int)]
        public int ProductDescriptionID { get; set; }

        [SqlField("CultureID", true, FrameworkTypeEnum.NChar)]
        public string CultureID { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Production", "ProductPhoto")]
    public class ProductPhoto : Row
    {
        [SqlField("ProductPhotoID", true, FrameworkTypeEnum.Int)]
        public int ProductPhotoID { get; set; }

        [SqlField("ThumbNailPhoto", FrameworkTypeEnum.Varbinary)]
        public byte[] ThumbNailPhoto { get; set; }

        [SqlField("ThumbnailPhotoFileName", FrameworkTypeEnum.Nvarcahr)]
        public string ThumbnailPhotoFileName { get; set; }

        [SqlField("LargePhoto", FrameworkTypeEnum.Varbinary)]
        public byte[] LargePhoto { get; set; }

        [SqlField("LargePhotoFileName", FrameworkTypeEnum.Nvarcahr)]
        public string LargePhotoFileName { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Production", "ProductProductPhoto")]
    public class ProductProductPhoto : Row
    {
        [SqlField("ProductID", true, FrameworkTypeEnum.Int)]
        public int ProductID { get; set; }

        [SqlField("ProductPhotoID", true, FrameworkTypeEnum.Int)]
        public int ProductPhotoID { get; set; }

        [SqlField("Primary", FrameworkTypeEnum.Bit)]
        public bool Primary { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Production", "ProductReview")]
    public class ProductReview : Row
    {
        [SqlField("ProductReviewID", true, FrameworkTypeEnum.Int)]
        public int ProductReviewID { get; set; }

        [SqlField("ProductID", FrameworkTypeEnum.Int)]
        public int ProductID { get; set; }

        [SqlField("ReviewerName", FrameworkTypeEnum.Nvarcahr)]
        public string ReviewerName { get; set; }

        [SqlField("ReviewDate", FrameworkTypeEnum.Datetime)]
        public DateTime ReviewDate { get; set; }

        [SqlField("EmailAddress", FrameworkTypeEnum.Nvarcahr)]
        public string EmailAddress { get; set; }

        [SqlField("Rating", FrameworkTypeEnum.Int)]
        public int Rating { get; set; }

        [SqlField("Comments", FrameworkTypeEnum.Nvarcahr)]
        public string Comments { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Production", "ProductSubcategory")]
    public class ProductSubcategory : Row
    {
        [SqlField("ProductSubcategoryID", true, FrameworkTypeEnum.Int)]
        public int ProductSubcategoryID { get; set; }

        [SqlField("ProductCategoryID", FrameworkTypeEnum.Int)]
        public int ProductCategoryID { get; set; }

        [SqlField("Name", FrameworkTypeEnum.Nvarcahr)]
        public string Name { get; set; }

        [SqlField("rowguid", FrameworkTypeEnum.Uniqueidentifier)]
        public Guid rowguid { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Production", "ScrapReason")]
    public class ScrapReason : Row
    {
        [SqlField("ScrapReasonID", true, FrameworkTypeEnum.Smallint)]
        public Int16 ScrapReasonID { get; set; }

        [SqlField("Name", FrameworkTypeEnum.Nvarcahr)]
        public string Name { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Production", "TransactionHistory")]
    public class TransactionHistory : Row
    {
        [SqlField("TransactionID", true, FrameworkTypeEnum.Int)]
        public int TransactionID { get; set; }

        [SqlField("ProductID", FrameworkTypeEnum.Int)]
        public int ProductID { get; set; }

        [SqlField("ReferenceOrderID", FrameworkTypeEnum.Int)]
        public int ReferenceOrderID { get; set; }

        [SqlField("ReferenceOrderLineID", FrameworkTypeEnum.Int)]
        public int ReferenceOrderLineID { get; set; }

        [SqlField("TransactionDate", FrameworkTypeEnum.Datetime)]
        public DateTime TransactionDate { get; set; }

        [SqlField("TransactionType", FrameworkTypeEnum.NChar)]
        public string TransactionType { get; set; }

        [SqlField("Quantity", FrameworkTypeEnum.Int)]
        public int Quantity { get; set; }

        [SqlField("ActualCost", FrameworkTypeEnum.Money)]
        public Decimal ActualCost { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Production", "TransactionHistoryArchive")]
    public class TransactionHistoryArchive : Row
    {
        [SqlField("TransactionID", true, FrameworkTypeEnum.Int)]
        public int TransactionID { get; set; }

        [SqlField("ProductID", FrameworkTypeEnum.Int)]
        public int ProductID { get; set; }

        [SqlField("ReferenceOrderID", FrameworkTypeEnum.Int)]
        public int ReferenceOrderID { get; set; }

        [SqlField("ReferenceOrderLineID", FrameworkTypeEnum.Int)]
        public int ReferenceOrderLineID { get; set; }

        [SqlField("TransactionDate", FrameworkTypeEnum.Datetime)]
        public DateTime TransactionDate { get; set; }

        [SqlField("TransactionType", FrameworkTypeEnum.NChar)]
        public string TransactionType { get; set; }

        [SqlField("Quantity", FrameworkTypeEnum.Int)]
        public int Quantity { get; set; }

        [SqlField("ActualCost", FrameworkTypeEnum.Money)]
        public Decimal ActualCost { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Production", "UnitMeasure")]
    public class UnitMeasure : Row
    {
        [SqlField("UnitMeasureCode", true, FrameworkTypeEnum.NChar)]
        public string UnitMeasureCode { get; set; }

        [SqlField("Name", FrameworkTypeEnum.Nvarcahr)]
        public string Name { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Production", "vProductAndDescription")]
    public class vProductAndDescription : Row
    {
        [SqlField("ProductID", FrameworkTypeEnum.Int)]
        public int ProductID { get; set; }

        [SqlField("Name", FrameworkTypeEnum.Nvarcahr)]
        public string Name { get; set; }

        [SqlField("ProductModel", FrameworkTypeEnum.Nvarcahr)]
        public string ProductModel { get; set; }

        [SqlField("CultureID", FrameworkTypeEnum.NChar)]
        public string CultureID { get; set; }

        [SqlField("Description", FrameworkTypeEnum.Nvarcahr)]
        public string Description { get; set; }
    }

    [SqlTable("Production", "vProductModelCatalogDescription")]
    public class vProductModelCatalogDescription : Row
    {
        [SqlField("ProductModelID", FrameworkTypeEnum.Int)]
        public int ProductModelID { get; set; }

        [SqlField("Name", FrameworkTypeEnum.Nvarcahr)]
        public string Name { get; set; }

        [SqlField("Summary", FrameworkTypeEnum.Nvarcahr)]
        public string Summary { get; set; }

        [SqlField("Manufacturer", FrameworkTypeEnum.Nvarcahr)]
        public string Manufacturer { get; set; }

        [SqlField("Copyright", FrameworkTypeEnum.Nvarcahr)]
        public string Copyright { get; set; }

        [SqlField("ProductURL", FrameworkTypeEnum.Nvarcahr)]
        public string ProductURL { get; set; }

        [SqlField("WarrantyPeriod", FrameworkTypeEnum.Nvarcahr)]
        public string WarrantyPeriod { get; set; }

        [SqlField("WarrantyDescription", FrameworkTypeEnum.Nvarcahr)]
        public string WarrantyDescription { get; set; }

        [SqlField("NoOfYears", FrameworkTypeEnum.Nvarcahr)]
        public string NoOfYears { get; set; }

        [SqlField("MaintenanceDescription", FrameworkTypeEnum.Nvarcahr)]
        public string MaintenanceDescription { get; set; }

        [SqlField("Wheel", FrameworkTypeEnum.Nvarcahr)]
        public string Wheel { get; set; }

        [SqlField("Saddle", FrameworkTypeEnum.Nvarcahr)]
        public string Saddle { get; set; }

        [SqlField("Pedal", FrameworkTypeEnum.Nvarcahr)]
        public string Pedal { get; set; }

        [SqlField("BikeFrame", FrameworkTypeEnum.Nvarcahr)]
        public string BikeFrame { get; set; }

        [SqlField("Crankset", FrameworkTypeEnum.Nvarcahr)]
        public string Crankset { get; set; }

        [SqlField("PictureAngle", FrameworkTypeEnum.Nvarcahr)]
        public string PictureAngle { get; set; }

        [SqlField("PictureSize", FrameworkTypeEnum.Nvarcahr)]
        public string PictureSize { get; set; }

        [SqlField("ProductPhotoID", FrameworkTypeEnum.Nvarcahr)]
        public string ProductPhotoID { get; set; }

        [SqlField("Material", FrameworkTypeEnum.Nvarcahr)]
        public string Material { get; set; }

        [SqlField("Color", FrameworkTypeEnum.Nvarcahr)]
        public string Color { get; set; }

        [SqlField("ProductLine", FrameworkTypeEnum.Nvarcahr)]
        public string ProductLine { get; set; }

        [SqlField("Style", FrameworkTypeEnum.Nvarcahr)]
        public string Style { get; set; }

        [SqlField("RiderExperience", FrameworkTypeEnum.Nvarcahr)]
        public string RiderExperience { get; set; }

        [SqlField("rowguid", FrameworkTypeEnum.Uniqueidentifier)]
        public Guid rowguid { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Production", "vProductModelInstructions")]
    public class vProductModelInstructions : Row
    {
        [SqlField("ProductModelID", FrameworkTypeEnum.Int)]
        public int ProductModelID { get; set; }

        [SqlField("Name", FrameworkTypeEnum.Nvarcahr)]
        public string Name { get; set; }

        [SqlField("Instructions", FrameworkTypeEnum.Nvarcahr)]
        public string Instructions { get; set; }

        [SqlField("LocationID", FrameworkTypeEnum.Int)]
        public int? LocationID { get; set; }

        [SqlField("SetupHours", FrameworkTypeEnum.Decimal)]
        public Decimal? SetupHours { get; set; }

        [SqlField("MachineHours", FrameworkTypeEnum.Decimal)]
        public Decimal? MachineHours { get; set; }

        [SqlField("LaborHours", FrameworkTypeEnum.Decimal)]
        public Decimal? LaborHours { get; set; }

        [SqlField("LotSize", FrameworkTypeEnum.Int)]
        public int? LotSize { get; set; }

        [SqlField("Step", FrameworkTypeEnum.Nvarcahr)]
        public string Step { get; set; }

        [SqlField("rowguid", FrameworkTypeEnum.Uniqueidentifier)]
        public Guid rowguid { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Production", "WorkOrder")]
    public class WorkOrder : Row
    {
        [SqlField("WorkOrderID", true, FrameworkTypeEnum.Int)]
        public int WorkOrderID { get; set; }

        [SqlField("ProductID", FrameworkTypeEnum.Int)]
        public int ProductID { get; set; }

        [SqlField("OrderQty", FrameworkTypeEnum.Int)]
        public int OrderQty { get; set; }

        [SqlField("StockedQty", FrameworkTypeEnum.Int)]
        public int StockedQty { get; set; }

        [SqlField("ScrappedQty", FrameworkTypeEnum.Smallint)]
        public Int16 ScrappedQty { get; set; }

        [SqlField("StartDate", FrameworkTypeEnum.Datetime)]
        public DateTime StartDate { get; set; }

        [SqlField("EndDate", FrameworkTypeEnum.Datetime)]
        public DateTime? EndDate { get; set; }

        [SqlField("DueDate", FrameworkTypeEnum.Datetime)]
        public DateTime DueDate { get; set; }

        [SqlField("ScrapReasonID", FrameworkTypeEnum.Smallint)]
        public Int16? ScrapReasonID { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Production", "WorkOrderRouting")]
    public class WorkOrderRouting : Row
    {
        [SqlField("WorkOrderID", true, FrameworkTypeEnum.Int)]
        public int WorkOrderID { get; set; }

        [SqlField("ProductID", true, FrameworkTypeEnum.Int)]
        public int ProductID { get; set; }

        [SqlField("OperationSequence", true, FrameworkTypeEnum.Smallint)]
        public Int16 OperationSequence { get; set; }

        [SqlField("LocationID", FrameworkTypeEnum.Smallint)]
        public Int16 LocationID { get; set; }

        [SqlField("ScheduledStartDate", FrameworkTypeEnum.Datetime)]
        public DateTime ScheduledStartDate { get; set; }

        [SqlField("ScheduledEndDate", FrameworkTypeEnum.Datetime)]
        public DateTime ScheduledEndDate { get; set; }

        [SqlField("ActualStartDate", FrameworkTypeEnum.Datetime)]
        public DateTime? ActualStartDate { get; set; }

        [SqlField("ActualEndDate", FrameworkTypeEnum.Datetime)]
        public DateTime? ActualEndDate { get; set; }

        [SqlField("ActualResourceHrs", FrameworkTypeEnum.Decimal)]
        public Decimal? ActualResourceHrs { get; set; }

        [SqlField("PlannedCost", FrameworkTypeEnum.Money)]
        public Decimal PlannedCost { get; set; }

        [SqlField("ActualCost", FrameworkTypeEnum.Money)]
        public Decimal? ActualCost { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }
}

namespace Database.Purchasing
{
    using Framework.Dal;
    using System;

    [SqlTable("Purchasing", "ProductVendor")]
    public class ProductVendor : Row
    {
        [SqlField("ProductID", true, FrameworkTypeEnum.Int)]
        public int ProductID { get; set; }

        [SqlField("BusinessEntityID", true, FrameworkTypeEnum.Int)]
        public int BusinessEntityID { get; set; }

        [SqlField("AverageLeadTime", FrameworkTypeEnum.Int)]
        public int AverageLeadTime { get; set; }

        [SqlField("StandardPrice", FrameworkTypeEnum.Money)]
        public Decimal StandardPrice { get; set; }

        [SqlField("LastReceiptCost", FrameworkTypeEnum.Money)]
        public Decimal? LastReceiptCost { get; set; }

        [SqlField("LastReceiptDate", FrameworkTypeEnum.Datetime)]
        public DateTime? LastReceiptDate { get; set; }

        [SqlField("MinOrderQty", FrameworkTypeEnum.Int)]
        public int MinOrderQty { get; set; }

        [SqlField("MaxOrderQty", FrameworkTypeEnum.Int)]
        public int MaxOrderQty { get; set; }

        [SqlField("OnOrderQty", FrameworkTypeEnum.Int)]
        public int? OnOrderQty { get; set; }

        [SqlField("UnitMeasureCode", FrameworkTypeEnum.NChar)]
        public string UnitMeasureCode { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Purchasing", "PurchaseOrderDetail")]
    public class PurchaseOrderDetail : Row
    {
        [SqlField("PurchaseOrderID", true, FrameworkTypeEnum.Int)]
        public int PurchaseOrderID { get; set; }

        [SqlField("PurchaseOrderDetailID", true, FrameworkTypeEnum.Int)]
        public int PurchaseOrderDetailID { get; set; }

        [SqlField("DueDate", FrameworkTypeEnum.Datetime)]
        public DateTime DueDate { get; set; }

        [SqlField("OrderQty", FrameworkTypeEnum.Smallint)]
        public Int16 OrderQty { get; set; }

        [SqlField("ProductID", FrameworkTypeEnum.Int)]
        public int ProductID { get; set; }

        [SqlField("UnitPrice", FrameworkTypeEnum.Money)]
        public Decimal UnitPrice { get; set; }

        [SqlField("LineTotal", FrameworkTypeEnum.Money)]
        public Decimal LineTotal { get; set; }

        [SqlField("ReceivedQty", FrameworkTypeEnum.Decimal)]
        public Decimal ReceivedQty { get; set; }

        [SqlField("RejectedQty", FrameworkTypeEnum.Decimal)]
        public Decimal RejectedQty { get; set; }

        [SqlField("StockedQty", FrameworkTypeEnum.Decimal)]
        public Decimal StockedQty { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Purchasing", "PurchaseOrderHeader")]
    public class PurchaseOrderHeader : Row
    {
        [SqlField("PurchaseOrderID", true, FrameworkTypeEnum.Int)]
        public int PurchaseOrderID { get; set; }

        [SqlField("RevisionNumber", FrameworkTypeEnum.Tinyint)]
        public Byte RevisionNumber { get; set; }

        [SqlField("Status", FrameworkTypeEnum.Tinyint)]
        public Byte Status { get; set; }

        [SqlField("EmployeeID", FrameworkTypeEnum.Int)]
        public int EmployeeID { get; set; }

        [SqlField("VendorID", FrameworkTypeEnum.Int)]
        public int VendorID { get; set; }

        [SqlField("ShipMethodID", FrameworkTypeEnum.Int)]
        public int ShipMethodID { get; set; }

        [SqlField("OrderDate", FrameworkTypeEnum.Datetime)]
        public DateTime OrderDate { get; set; }

        [SqlField("ShipDate", FrameworkTypeEnum.Datetime)]
        public DateTime? ShipDate { get; set; }

        [SqlField("SubTotal", FrameworkTypeEnum.Money)]
        public Decimal SubTotal { get; set; }

        [SqlField("TaxAmt", FrameworkTypeEnum.Money)]
        public Decimal TaxAmt { get; set; }

        [SqlField("Freight", FrameworkTypeEnum.Money)]
        public Decimal Freight { get; set; }

        [SqlField("TotalDue", FrameworkTypeEnum.Money)]
        public Decimal TotalDue { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Purchasing", "ShipMethod")]
    public class ShipMethod : Row
    {
        [SqlField("ShipMethodID", true, FrameworkTypeEnum.Int)]
        public int ShipMethodID { get; set; }

        [SqlField("Name", FrameworkTypeEnum.Nvarcahr)]
        public string Name { get; set; }

        [SqlField("ShipBase", FrameworkTypeEnum.Money)]
        public Decimal ShipBase { get; set; }

        [SqlField("ShipRate", FrameworkTypeEnum.Money)]
        public Decimal ShipRate { get; set; }

        [SqlField("rowguid", FrameworkTypeEnum.Uniqueidentifier)]
        public Guid rowguid { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Purchasing", "Vendor")]
    public class Vendor : Row
    {
        [SqlField("BusinessEntityID", true, FrameworkTypeEnum.Int)]
        public int BusinessEntityID { get; set; }

        [SqlField("AccountNumber", FrameworkTypeEnum.Nvarcahr)]
        public string AccountNumber { get; set; }

        [SqlField("Name", FrameworkTypeEnum.Nvarcahr)]
        public string Name { get; set; }

        [SqlField("CreditRating", FrameworkTypeEnum.Tinyint)]
        public Byte CreditRating { get; set; }

        [SqlField("PreferredVendorStatus", FrameworkTypeEnum.Bit)]
        public bool PreferredVendorStatus { get; set; }

        [SqlField("ActiveFlag", FrameworkTypeEnum.Bit)]
        public bool ActiveFlag { get; set; }

        [SqlField("PurchasingWebServiceURL", FrameworkTypeEnum.Nvarcahr)]
        public string PurchasingWebServiceURL { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Purchasing", "vVendorWithAddresses")]
    public class vVendorWithAddresses : Row
    {
        [SqlField("BusinessEntityID", FrameworkTypeEnum.Int)]
        public int BusinessEntityID { get; set; }

        [SqlField("Name", FrameworkTypeEnum.Nvarcahr)]
        public string Name { get; set; }

        [SqlField("AddressType", FrameworkTypeEnum.Nvarcahr)]
        public string AddressType { get; set; }

        [SqlField("AddressLine1", FrameworkTypeEnum.Nvarcahr)]
        public string AddressLine1 { get; set; }

        [SqlField("AddressLine2", FrameworkTypeEnum.Nvarcahr)]
        public string AddressLine2 { get; set; }

        [SqlField("City", FrameworkTypeEnum.Nvarcahr)]
        public string City { get; set; }

        [SqlField("StateProvinceName", FrameworkTypeEnum.Nvarcahr)]
        public string StateProvinceName { get; set; }

        [SqlField("PostalCode", FrameworkTypeEnum.Nvarcahr)]
        public string PostalCode { get; set; }

        [SqlField("CountryRegionName", FrameworkTypeEnum.Nvarcahr)]
        public string CountryRegionName { get; set; }
    }

    [SqlTable("Purchasing", "vVendorWithContacts")]
    public class vVendorWithContacts : Row
    {
        [SqlField("BusinessEntityID", FrameworkTypeEnum.Int)]
        public int BusinessEntityID { get; set; }

        [SqlField("Name", FrameworkTypeEnum.Nvarcahr)]
        public string Name { get; set; }

        [SqlField("ContactType", FrameworkTypeEnum.Nvarcahr)]
        public string ContactType { get; set; }

        [SqlField("Title", FrameworkTypeEnum.Nvarcahr)]
        public string Title { get; set; }

        [SqlField("FirstName", FrameworkTypeEnum.Nvarcahr)]
        public string FirstName { get; set; }

        [SqlField("MiddleName", FrameworkTypeEnum.Nvarcahr)]
        public string MiddleName { get; set; }

        [SqlField("LastName", FrameworkTypeEnum.Nvarcahr)]
        public string LastName { get; set; }

        [SqlField("Suffix", FrameworkTypeEnum.Nvarcahr)]
        public string Suffix { get; set; }

        [SqlField("PhoneNumber", FrameworkTypeEnum.Nvarcahr)]
        public string PhoneNumber { get; set; }

        [SqlField("PhoneNumberType", FrameworkTypeEnum.Nvarcahr)]
        public string PhoneNumberType { get; set; }

        [SqlField("EmailAddress", FrameworkTypeEnum.Nvarcahr)]
        public string EmailAddress { get; set; }

        [SqlField("EmailPromotion", FrameworkTypeEnum.Int)]
        public int EmailPromotion { get; set; }
    }
}

namespace Database.Sales
{
    using Framework.Dal;
    using System;

    [SqlTable("Sales", "CountryRegionCurrency")]
    public class CountryRegionCurrency : Row
    {
        [SqlField("CountryRegionCode", true, FrameworkTypeEnum.Nvarcahr)]
        public string CountryRegionCode { get; set; }

        [SqlField("CurrencyCode", true, FrameworkTypeEnum.NChar)]
        public string CurrencyCode { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Sales", "CreditCard")]
    public class CreditCard : Row
    {
        [SqlField("CreditCardID", true, FrameworkTypeEnum.Int)]
        public int CreditCardID { get; set; }

        [SqlField("CardType", FrameworkTypeEnum.Nvarcahr)]
        public string CardType { get; set; }

        [SqlField("CardNumber", FrameworkTypeEnum.Nvarcahr)]
        public string CardNumber { get; set; }

        [SqlField("ExpMonth", FrameworkTypeEnum.Tinyint)]
        public Byte ExpMonth { get; set; }

        [SqlField("ExpYear", FrameworkTypeEnum.Smallint)]
        public Int16 ExpYear { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Sales", "Currency")]
    public class Currency : Row
    {
        [SqlField("CurrencyCode", true, FrameworkTypeEnum.NChar)]
        public string CurrencyCode { get; set; }

        [SqlField("Name", FrameworkTypeEnum.Nvarcahr)]
        public string Name { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Sales", "CurrencyRate")]
    public class CurrencyRate : Row
    {
        [SqlField("CurrencyRateID", true, FrameworkTypeEnum.Int)]
        public int CurrencyRateID { get; set; }

        [SqlField("CurrencyRateDate", FrameworkTypeEnum.Datetime)]
        public DateTime CurrencyRateDate { get; set; }

        [SqlField("FromCurrencyCode", FrameworkTypeEnum.NChar)]
        public string FromCurrencyCode { get; set; }

        [SqlField("ToCurrencyCode", FrameworkTypeEnum.NChar)]
        public string ToCurrencyCode { get; set; }

        [SqlField("AverageRate", FrameworkTypeEnum.Money)]
        public Decimal AverageRate { get; set; }

        [SqlField("EndOfDayRate", FrameworkTypeEnum.Money)]
        public Decimal EndOfDayRate { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Sales", "Customer")]
    public class Customer : Row
    {
        [SqlField("CustomerID", true, FrameworkTypeEnum.Int)]
        public int CustomerID { get; set; }

        [SqlField("PersonID", FrameworkTypeEnum.Int)]
        public int? PersonID { get; set; }

        [SqlField("StoreID", FrameworkTypeEnum.Int)]
        public int? StoreID { get; set; }

        [SqlField("TerritoryID", FrameworkTypeEnum.Int)]
        public int? TerritoryID { get; set; }

        [SqlField("AccountNumber", FrameworkTypeEnum.Varchar)]
        public string AccountNumber { get; set; }

        [SqlField("rowguid", FrameworkTypeEnum.Uniqueidentifier)]
        public Guid rowguid { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Sales", "PersonCreditCard")]
    public class PersonCreditCard : Row
    {
        [SqlField("BusinessEntityID", true, FrameworkTypeEnum.Int)]
        public int BusinessEntityID { get; set; }

        [SqlField("CreditCardID", true, FrameworkTypeEnum.Int)]
        public int CreditCardID { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Sales", "SalesOrderDetail")]
    public class SalesOrderDetail : Row
    {
        [SqlField("SalesOrderID", true, FrameworkTypeEnum.Int)]
        public int SalesOrderID { get; set; }

        [SqlField("SalesOrderDetailID", true, FrameworkTypeEnum.Int)]
        public int SalesOrderDetailID { get; set; }

        [SqlField("CarrierTrackingNumber", FrameworkTypeEnum.Nvarcahr)]
        public string CarrierTrackingNumber { get; set; }

        [SqlField("OrderQty", FrameworkTypeEnum.Smallint)]
        public Int16 OrderQty { get; set; }

        [SqlField("ProductID", FrameworkTypeEnum.Int)]
        public int ProductID { get; set; }

        [SqlField("SpecialOfferID", FrameworkTypeEnum.Int)]
        public int SpecialOfferID { get; set; }

        [SqlField("UnitPrice", FrameworkTypeEnum.Money)]
        public Decimal UnitPrice { get; set; }

        [SqlField("UnitPriceDiscount", FrameworkTypeEnum.Money)]
        public Decimal UnitPriceDiscount { get; set; }

        [SqlField("LineTotal", FrameworkTypeEnum.Numeric)]
        public Decimal LineTotal { get; set; }

        [SqlField("rowguid", FrameworkTypeEnum.Uniqueidentifier)]
        public Guid rowguid { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Sales", "SalesOrderHeader")]
    public class SalesOrderHeader : Row
    {
        [SqlField("SalesOrderID", true, FrameworkTypeEnum.Int)]
        public int SalesOrderID { get; set; }

        [SqlField("RevisionNumber", FrameworkTypeEnum.Tinyint)]
        public Byte RevisionNumber { get; set; }

        [SqlField("OrderDate", FrameworkTypeEnum.Datetime)]
        public DateTime OrderDate { get; set; }

        [SqlField("DueDate", FrameworkTypeEnum.Datetime)]
        public DateTime DueDate { get; set; }

        [SqlField("ShipDate", FrameworkTypeEnum.Datetime)]
        public DateTime? ShipDate { get; set; }

        [SqlField("Status", FrameworkTypeEnum.Tinyint)]
        public Byte Status { get; set; }

        [SqlField("OnlineOrderFlag", FrameworkTypeEnum.Bit)]
        public bool OnlineOrderFlag { get; set; }

        [SqlField("SalesOrderNumber", FrameworkTypeEnum.Nvarcahr)]
        public string SalesOrderNumber { get; set; }

        [SqlField("PurchaseOrderNumber", FrameworkTypeEnum.Nvarcahr)]
        public string PurchaseOrderNumber { get; set; }

        [SqlField("AccountNumber", FrameworkTypeEnum.Nvarcahr)]
        public string AccountNumber { get; set; }

        [SqlField("CustomerID", FrameworkTypeEnum.Int)]
        public int CustomerID { get; set; }

        [SqlField("SalesPersonID", FrameworkTypeEnum.Int)]
        public int? SalesPersonID { get; set; }

        [SqlField("TerritoryID", FrameworkTypeEnum.Int)]
        public int? TerritoryID { get; set; }

        [SqlField("BillToAddressID", FrameworkTypeEnum.Int)]
        public int BillToAddressID { get; set; }

        [SqlField("ShipToAddressID", FrameworkTypeEnum.Int)]
        public int ShipToAddressID { get; set; }

        [SqlField("ShipMethodID", FrameworkTypeEnum.Int)]
        public int ShipMethodID { get; set; }

        [SqlField("CreditCardID", FrameworkTypeEnum.Int)]
        public int? CreditCardID { get; set; }

        [SqlField("CreditCardApprovalCode", FrameworkTypeEnum.Varchar)]
        public string CreditCardApprovalCode { get; set; }

        [SqlField("CurrencyRateID", FrameworkTypeEnum.Int)]
        public int? CurrencyRateID { get; set; }

        [SqlField("SubTotal", FrameworkTypeEnum.Money)]
        public Decimal SubTotal { get; set; }

        [SqlField("TaxAmt", FrameworkTypeEnum.Money)]
        public Decimal TaxAmt { get; set; }

        [SqlField("Freight", FrameworkTypeEnum.Money)]
        public Decimal Freight { get; set; }

        [SqlField("TotalDue", FrameworkTypeEnum.Money)]
        public Decimal TotalDue { get; set; }

        [SqlField("Comment", FrameworkTypeEnum.Nvarcahr)]
        public string Comment { get; set; }

        [SqlField("rowguid", FrameworkTypeEnum.Uniqueidentifier)]
        public Guid rowguid { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Sales", "SalesOrderHeaderSalesReason")]
    public class SalesOrderHeaderSalesReason : Row
    {
        [SqlField("SalesOrderID", true, FrameworkTypeEnum.Int)]
        public int SalesOrderID { get; set; }

        [SqlField("SalesReasonID", true, FrameworkTypeEnum.Int)]
        public int SalesReasonID { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Sales", "SalesPerson")]
    public class SalesPerson : Row
    {
        [SqlField("BusinessEntityID", true, FrameworkTypeEnum.Int)]
        public int BusinessEntityID { get; set; }

        [SqlField("TerritoryID", FrameworkTypeEnum.Int)]
        public int? TerritoryID { get; set; }

        [SqlField("SalesQuota", FrameworkTypeEnum.Money)]
        public Decimal? SalesQuota { get; set; }

        [SqlField("Bonus", FrameworkTypeEnum.Money)]
        public Decimal Bonus { get; set; }

        [SqlField("CommissionPct", FrameworkTypeEnum.Smallmoney)]
        public Decimal CommissionPct { get; set; }

        [SqlField("SalesYTD", FrameworkTypeEnum.Money)]
        public Decimal SalesYTD { get; set; }

        [SqlField("SalesLastYear", FrameworkTypeEnum.Money)]
        public Decimal SalesLastYear { get; set; }

        [SqlField("rowguid", FrameworkTypeEnum.Uniqueidentifier)]
        public Guid rowguid { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Sales", "SalesPersonQuotaHistory")]
    public class SalesPersonQuotaHistory : Row
    {
        [SqlField("BusinessEntityID", true, FrameworkTypeEnum.Int)]
        public int BusinessEntityID { get; set; }

        [SqlField("QuotaDate", true, FrameworkTypeEnum.Datetime)]
        public DateTime QuotaDate { get; set; }

        [SqlField("SalesQuota", FrameworkTypeEnum.Money)]
        public Decimal SalesQuota { get; set; }

        [SqlField("rowguid", FrameworkTypeEnum.Uniqueidentifier)]
        public Guid rowguid { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Sales", "SalesReason")]
    public class SalesReason : Row
    {
        [SqlField("SalesReasonID", true, FrameworkTypeEnum.Int)]
        public int SalesReasonID { get; set; }

        [SqlField("Name", FrameworkTypeEnum.Nvarcahr)]
        public string Name { get; set; }

        [SqlField("ReasonType", FrameworkTypeEnum.Nvarcahr)]
        public string ReasonType { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Sales", "SalesTaxRate")]
    public class SalesTaxRate : Row
    {
        [SqlField("SalesTaxRateID", true, FrameworkTypeEnum.Int)]
        public int SalesTaxRateID { get; set; }

        [SqlField("StateProvinceID", FrameworkTypeEnum.Int)]
        public int StateProvinceID { get; set; }

        [SqlField("TaxType", FrameworkTypeEnum.Tinyint)]
        public Byte TaxType { get; set; }

        [SqlField("TaxRate", FrameworkTypeEnum.Smallmoney)]
        public Decimal TaxRate { get; set; }

        [SqlField("Name", FrameworkTypeEnum.Nvarcahr)]
        public string Name { get; set; }

        [SqlField("rowguid", FrameworkTypeEnum.Uniqueidentifier)]
        public Guid rowguid { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Sales", "SalesTerritory")]
    public class SalesTerritory : Row
    {
        [SqlField("TerritoryID", true, FrameworkTypeEnum.Int)]
        public int TerritoryID { get; set; }

        [SqlField("Name", FrameworkTypeEnum.Nvarcahr)]
        public string Name { get; set; }

        [SqlField("CountryRegionCode", FrameworkTypeEnum.Nvarcahr)]
        public string CountryRegionCode { get; set; }

        [SqlField("Group", FrameworkTypeEnum.Nvarcahr)]
        public string Group { get; set; }

        [SqlField("SalesYTD", FrameworkTypeEnum.Money)]
        public Decimal SalesYTD { get; set; }

        [SqlField("SalesLastYear", FrameworkTypeEnum.Money)]
        public Decimal SalesLastYear { get; set; }

        [SqlField("CostYTD", FrameworkTypeEnum.Money)]
        public Decimal CostYTD { get; set; }

        [SqlField("CostLastYear", FrameworkTypeEnum.Money)]
        public Decimal CostLastYear { get; set; }

        [SqlField("rowguid", FrameworkTypeEnum.Uniqueidentifier)]
        public Guid rowguid { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Sales", "SalesTerritoryHistory")]
    public class SalesTerritoryHistory : Row
    {
        [SqlField("BusinessEntityID", true, FrameworkTypeEnum.Int)]
        public int BusinessEntityID { get; set; }

        [SqlField("TerritoryID", true, FrameworkTypeEnum.Int)]
        public int TerritoryID { get; set; }

        [SqlField("StartDate", true, FrameworkTypeEnum.Datetime)]
        public DateTime StartDate { get; set; }

        [SqlField("EndDate", FrameworkTypeEnum.Datetime)]
        public DateTime? EndDate { get; set; }

        [SqlField("rowguid", FrameworkTypeEnum.Uniqueidentifier)]
        public Guid rowguid { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Sales", "ShoppingCartItem")]
    public class ShoppingCartItem : Row
    {
        [SqlField("ShoppingCartItemID", true, FrameworkTypeEnum.Int)]
        public int ShoppingCartItemID { get; set; }

        [SqlField("ShoppingCartID", FrameworkTypeEnum.Nvarcahr)]
        public string ShoppingCartID { get; set; }

        [SqlField("Quantity", FrameworkTypeEnum.Int)]
        public int Quantity { get; set; }

        [SqlField("ProductID", FrameworkTypeEnum.Int)]
        public int ProductID { get; set; }

        [SqlField("DateCreated", FrameworkTypeEnum.Datetime)]
        public DateTime DateCreated { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Sales", "SpecialOffer")]
    public class SpecialOffer : Row
    {
        [SqlField("SpecialOfferID", true, FrameworkTypeEnum.Int)]
        public int SpecialOfferID { get; set; }

        [SqlField("Description", FrameworkTypeEnum.Nvarcahr)]
        public string Description { get; set; }

        [SqlField("DiscountPct", FrameworkTypeEnum.Smallmoney)]
        public Decimal DiscountPct { get; set; }

        [SqlField("Type", FrameworkTypeEnum.Nvarcahr)]
        public string Type { get; set; }

        [SqlField("Category", FrameworkTypeEnum.Nvarcahr)]
        public string Category { get; set; }

        [SqlField("StartDate", FrameworkTypeEnum.Datetime)]
        public DateTime StartDate { get; set; }

        [SqlField("EndDate", FrameworkTypeEnum.Datetime)]
        public DateTime EndDate { get; set; }

        [SqlField("MinQty", FrameworkTypeEnum.Int)]
        public int MinQty { get; set; }

        [SqlField("MaxQty", FrameworkTypeEnum.Int)]
        public int? MaxQty { get; set; }

        [SqlField("rowguid", FrameworkTypeEnum.Uniqueidentifier)]
        public Guid rowguid { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Sales", "SpecialOfferProduct")]
    public class SpecialOfferProduct : Row
    {
        [SqlField("SpecialOfferID", true, FrameworkTypeEnum.Int)]
        public int SpecialOfferID { get; set; }

        [SqlField("ProductID", true, FrameworkTypeEnum.Int)]
        public int ProductID { get; set; }

        [SqlField("rowguid", FrameworkTypeEnum.Uniqueidentifier)]
        public Guid rowguid { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Sales", "Store")]
    public class Store : Row
    {
        [SqlField("BusinessEntityID", true, FrameworkTypeEnum.Int)]
        public int BusinessEntityID { get; set; }

        [SqlField("Name", FrameworkTypeEnum.Nvarcahr)]
        public string Name { get; set; }

        [SqlField("SalesPersonID", FrameworkTypeEnum.Int)]
        public int? SalesPersonID { get; set; }


        [SqlField("rowguid", FrameworkTypeEnum.Uniqueidentifier)]
        public Guid rowguid { get; set; }

        [SqlField("ModifiedDate", FrameworkTypeEnum.Datetime)]
        public DateTime ModifiedDate { get; set; }
    }

    [SqlTable("Sales", "vIndividualCustomer")]
    public class vIndividualCustomer : Row
    {
        [SqlField("BusinessEntityID", FrameworkTypeEnum.Int)]
        public int BusinessEntityID { get; set; }

        [SqlField("Title", FrameworkTypeEnum.Nvarcahr)]
        public string Title { get; set; }

        [SqlField("FirstName", FrameworkTypeEnum.Nvarcahr)]
        public string FirstName { get; set; }

        [SqlField("MiddleName", FrameworkTypeEnum.Nvarcahr)]
        public string MiddleName { get; set; }

        [SqlField("LastName", FrameworkTypeEnum.Nvarcahr)]
        public string LastName { get; set; }

        [SqlField("Suffix", FrameworkTypeEnum.Nvarcahr)]
        public string Suffix { get; set; }

        [SqlField("PhoneNumber", FrameworkTypeEnum.Nvarcahr)]
        public string PhoneNumber { get; set; }

        [SqlField("PhoneNumberType", FrameworkTypeEnum.Nvarcahr)]
        public string PhoneNumberType { get; set; }

        [SqlField("EmailAddress", FrameworkTypeEnum.Nvarcahr)]
        public string EmailAddress { get; set; }

        [SqlField("EmailPromotion", FrameworkTypeEnum.Int)]
        public int EmailPromotion { get; set; }

        [SqlField("AddressType", FrameworkTypeEnum.Nvarcahr)]
        public string AddressType { get; set; }

        [SqlField("AddressLine1", FrameworkTypeEnum.Nvarcahr)]
        public string AddressLine1 { get; set; }

        [SqlField("AddressLine2", FrameworkTypeEnum.Nvarcahr)]
        public string AddressLine2 { get; set; }

        [SqlField("City", FrameworkTypeEnum.Nvarcahr)]
        public string City { get; set; }

        [SqlField("StateProvinceName", FrameworkTypeEnum.Nvarcahr)]
        public string StateProvinceName { get; set; }

        [SqlField("PostalCode", FrameworkTypeEnum.Nvarcahr)]
        public string PostalCode { get; set; }

        [SqlField("CountryRegionName", FrameworkTypeEnum.Nvarcahr)]
        public string CountryRegionName { get; set; }

    }

    [SqlTable("Sales", "vPersonDemographics")]
    public class vPersonDemographics : Row
    {
        [SqlField("BusinessEntityID", FrameworkTypeEnum.Int)]
        public int BusinessEntityID { get; set; }

        [SqlField("TotalPurchaseYTD", FrameworkTypeEnum.Money)]
        public Decimal? TotalPurchaseYTD { get; set; }

        [SqlField("DateFirstPurchase", FrameworkTypeEnum.Datetime)]
        public DateTime? DateFirstPurchase { get; set; }

        [SqlField("BirthDate", FrameworkTypeEnum.Datetime)]
        public DateTime? BirthDate { get; set; }

        [SqlField("MaritalStatus", FrameworkTypeEnum.Nvarcahr)]
        public string MaritalStatus { get; set; }

        [SqlField("YearlyIncome", FrameworkTypeEnum.Nvarcahr)]
        public string YearlyIncome { get; set; }

        [SqlField("Gender", FrameworkTypeEnum.Nvarcahr)]
        public string Gender { get; set; }

        [SqlField("TotalChildren", FrameworkTypeEnum.Int)]
        public int? TotalChildren { get; set; }

        [SqlField("NumberChildrenAtHome", FrameworkTypeEnum.Int)]
        public int? NumberChildrenAtHome { get; set; }

        [SqlField("Education", FrameworkTypeEnum.Nvarcahr)]
        public string Education { get; set; }

        [SqlField("Occupation", FrameworkTypeEnum.Nvarcahr)]
        public string Occupation { get; set; }

        [SqlField("HomeOwnerFlag", FrameworkTypeEnum.Bit)]
        public bool? HomeOwnerFlag { get; set; }

        [SqlField("NumberCarsOwned", FrameworkTypeEnum.Int)]
        public int? NumberCarsOwned { get; set; }
    }

    [SqlTable("Sales", "vSalesPerson")]
    public class vSalesPerson : Row
    {
        [SqlField("BusinessEntityID", FrameworkTypeEnum.Int)]
        public int BusinessEntityID { get; set; }

        [SqlField("Title", FrameworkTypeEnum.Nvarcahr)]
        public string Title { get; set; }

        [SqlField("FirstName", FrameworkTypeEnum.Nvarcahr)]
        public string FirstName { get; set; }

        [SqlField("MiddleName", FrameworkTypeEnum.Nvarcahr)]
        public string MiddleName { get; set; }

        [SqlField("LastName", FrameworkTypeEnum.Nvarcahr)]
        public string LastName { get; set; }

        [SqlField("Suffix", FrameworkTypeEnum.Nvarcahr)]
        public string Suffix { get; set; }

        [SqlField("JobTitle", FrameworkTypeEnum.Nvarcahr)]
        public string JobTitle { get; set; }

        [SqlField("PhoneNumber", FrameworkTypeEnum.Nvarcahr)]
        public string PhoneNumber { get; set; }

        [SqlField("PhoneNumberType", FrameworkTypeEnum.Nvarcahr)]
        public string PhoneNumberType { get; set; }

        [SqlField("EmailAddress", FrameworkTypeEnum.Nvarcahr)]
        public string EmailAddress { get; set; }

        [SqlField("EmailPromotion", FrameworkTypeEnum.Int)]
        public int EmailPromotion { get; set; }

        [SqlField("AddressLine1", FrameworkTypeEnum.Nvarcahr)]
        public string AddressLine1 { get; set; }

        [SqlField("AddressLine2", FrameworkTypeEnum.Nvarcahr)]
        public string AddressLine2 { get; set; }

        [SqlField("City", FrameworkTypeEnum.Nvarcahr)]
        public string City { get; set; }

        [SqlField("StateProvinceName", FrameworkTypeEnum.Nvarcahr)]
        public string StateProvinceName { get; set; }

        [SqlField("PostalCode", FrameworkTypeEnum.Nvarcahr)]
        public string PostalCode { get; set; }

        [SqlField("CountryRegionName", FrameworkTypeEnum.Nvarcahr)]
        public string CountryRegionName { get; set; }

        [SqlField("TerritoryName", FrameworkTypeEnum.Nvarcahr)]
        public string TerritoryName { get; set; }

        [SqlField("TerritoryGroup", FrameworkTypeEnum.Nvarcahr)]
        public string TerritoryGroup { get; set; }

        [SqlField("SalesQuota", FrameworkTypeEnum.Money)]
        public Decimal? SalesQuota { get; set; }

        [SqlField("SalesYTD", FrameworkTypeEnum.Money)]
        public Decimal SalesYTD { get; set; }

        [SqlField("SalesLastYear", FrameworkTypeEnum.Money)]
        public Decimal SalesLastYear { get; set; }
    }

    [SqlTable("Sales", "vSalesPersonSalesByFiscalYears")]
    public class vSalesPersonSalesByFiscalYears : Row
    {
        [SqlField("SalesPersonID", FrameworkTypeEnum.Int)]
        public int? SalesPersonID { get; set; }

        [SqlField("FullName", FrameworkTypeEnum.Nvarcahr)]
        public string FullName { get; set; }

        [SqlField("JobTitle", FrameworkTypeEnum.Nvarcahr)]
        public string JobTitle { get; set; }

        [SqlField("SalesTerritory", FrameworkTypeEnum.Nvarcahr)]
        public string SalesTerritory { get; set; }
    }

    [SqlTable("Sales", "vStoreWithAddresses")]
    public class vStoreWithAddresses : Row
    {
        [SqlField("BusinessEntityID", FrameworkTypeEnum.Int)]
        public int BusinessEntityID { get; set; }

        [SqlField("Name", FrameworkTypeEnum.Nvarcahr)]
        public string Name { get; set; }

        [SqlField("AddressType", FrameworkTypeEnum.Nvarcahr)]
        public string AddressType { get; set; }

        [SqlField("AddressLine1", FrameworkTypeEnum.Nvarcahr)]
        public string AddressLine1 { get; set; }

        [SqlField("AddressLine2", FrameworkTypeEnum.Nvarcahr)]
        public string AddressLine2 { get; set; }

        [SqlField("City", FrameworkTypeEnum.Nvarcahr)]
        public string City { get; set; }

        [SqlField("StateProvinceName", FrameworkTypeEnum.Nvarcahr)]
        public string StateProvinceName { get; set; }

        [SqlField("PostalCode", FrameworkTypeEnum.Nvarcahr)]
        public string PostalCode { get; set; }

        [SqlField("CountryRegionName", FrameworkTypeEnum.Nvarcahr)]
        public string CountryRegionName { get; set; }
    }

    [SqlTable("Sales", "vStoreWithContacts")]
    public class vStoreWithContacts : Row
    {
        [SqlField("BusinessEntityID", FrameworkTypeEnum.Int)]
        public int BusinessEntityID { get; set; }

        [SqlField("Name", FrameworkTypeEnum.Nvarcahr)]
        public string Name { get; set; }

        [SqlField("ContactType", FrameworkTypeEnum.Nvarcahr)]
        public string ContactType { get; set; }

        [SqlField("Title", FrameworkTypeEnum.Nvarcahr)]
        public string Title { get; set; }

        [SqlField("FirstName", FrameworkTypeEnum.Nvarcahr)]
        public string FirstName { get; set; }

        [SqlField("MiddleName", FrameworkTypeEnum.Nvarcahr)]
        public string MiddleName { get; set; }

        [SqlField("LastName", FrameworkTypeEnum.Nvarcahr)]
        public string LastName { get; set; }

        [SqlField("Suffix", FrameworkTypeEnum.Nvarcahr)]
        public string Suffix { get; set; }

        [SqlField("PhoneNumber", FrameworkTypeEnum.Nvarcahr)]
        public string PhoneNumber { get; set; }

        [SqlField("PhoneNumberType", FrameworkTypeEnum.Nvarcahr)]
        public string PhoneNumberType { get; set; }

        [SqlField("EmailAddress", FrameworkTypeEnum.Nvarcahr)]
        public string EmailAddress { get; set; }

        [SqlField("EmailPromotion", FrameworkTypeEnum.Int)]
        public int EmailPromotion { get; set; }
    }

    [SqlTable("Sales", "vStoreWithDemographics")]
    public class vStoreWithDemographics : Row
    {
        [SqlField("BusinessEntityID", FrameworkTypeEnum.Int)]
        public int BusinessEntityID { get; set; }

        [SqlField("Name", FrameworkTypeEnum.Nvarcahr)]
        public string Name { get; set; }

        [SqlField("AnnualSales", FrameworkTypeEnum.Money)]
        public Decimal? AnnualSales { get; set; }

        [SqlField("AnnualRevenue", FrameworkTypeEnum.Money)]
        public Decimal? AnnualRevenue { get; set; }

        [SqlField("BankName", FrameworkTypeEnum.Nvarcahr)]
        public string BankName { get; set; }

        [SqlField("BusinessType", FrameworkTypeEnum.Nvarcahr)]
        public string BusinessType { get; set; }

        [SqlField("YearOpened", FrameworkTypeEnum.Int)]
        public int? YearOpened { get; set; }

        [SqlField("Specialty", FrameworkTypeEnum.Nvarcahr)]
        public string Specialty { get; set; }

        [SqlField("SquareFeet", FrameworkTypeEnum.Int)]
        public int? SquareFeet { get; set; }

        [SqlField("Brands", FrameworkTypeEnum.Nvarcahr)]
        public string Brands { get; set; }

        [SqlField("Internet", FrameworkTypeEnum.Nvarcahr)]
        public string Internet { get; set; }

        [SqlField("NumberEmployees", FrameworkTypeEnum.Int)]
        public int? NumberEmployees { get; set; }
    }
}
