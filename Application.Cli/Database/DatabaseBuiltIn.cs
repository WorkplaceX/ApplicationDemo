// Do not modify this file. It's generated by Framework.Cli.

namespace DatabaseBuiltIn.dbo
{
    using System.Collections.Generic;
    using Database.dbo;

    public static class FrameworkConfigGridBuiltInTableApplicationCli
    {
        public static List<FrameworkConfigGridBuiltIn> RowList
        {
            get
            {
                var result = new List<FrameworkConfigGridBuiltIn>();
                result.Add(new FrameworkConfigGridBuiltIn() { Id = 3, IdName = "Demo.Language; ", TableId = 14, TableIdName = "Demo.Language", TableNameCSharp = "Demo.Language", ConfigName = null, RowCountMax = null, IsAllowInsert = null, IsExist = true });
                result.Add(new FrameworkConfigGridBuiltIn() { Id = 4, IdName = "Demo.Navigation; ", TableId = 29, TableIdName = "Demo.Navigation", TableNameCSharp = "Demo.Navigation", ConfigName = null, RowCountMax = null, IsAllowInsert = null, IsExist = true });
                result.Add(new FrameworkConfigGridBuiltIn() { Id = 5, IdName = "Demo.RawOpenFlightsAirport; ", TableId = 34, TableIdName = "Demo.RawOpenFlightsAirport", TableNameCSharp = "Demo.RawOpenFlightsAirport", ConfigName = null, RowCountMax = null, IsAllowInsert = null, IsExist = true });
                result.Add(new FrameworkConfigGridBuiltIn() { Id = 6, IdName = "Demo.RawWikipediaAircraft; ", TableId = 36, TableIdName = "Demo.RawWikipediaAircraft", TableNameCSharp = "Demo.RawWikipediaAircraft", ConfigName = null, RowCountMax = 5, IsAllowInsert = null, IsExist = true });
                result.Add(new FrameworkConfigGridBuiltIn() { Id = 7, IdName = "Demo.RawWikipediaAircraft; G", TableId = 36, TableIdName = "Demo.RawWikipediaAircraft", TableNameCSharp = "Demo.RawWikipediaAircraft", ConfigName = "G", RowCountMax = 5, IsAllowInsert = null, IsExist = true });
                return result;
            }
        }
    }

    public static class FrameworkConfigFieldBuiltInTableApplicationCli
    {
        public static List<FrameworkConfigFieldBuiltIn> RowList
        {
            get
            {
                var result = new List<FrameworkConfigFieldBuiltIn>();
                result.Add(new FrameworkConfigFieldBuiltIn() { Id = 18, ConfigGridId = 4, ConfigGridIdName = "Demo.Navigation; ", FieldId = 168, FieldIdName = "Demo.Navigation; Id", TableNameCSharp = "Demo.Navigation", ConfigName = null, FieldNameCSharp = "Id", Text = null, Description = null, IsVisible = true, IsReadOnly = null, Sort = null, IsExist = true });
                result.Add(new FrameworkConfigFieldBuiltIn() { Id = 19, ConfigGridId = 4, ConfigGridIdName = "Demo.Navigation; ", FieldId = 172, FieldIdName = "Demo.Navigation; PageName", TableNameCSharp = "Demo.Navigation", ConfigName = null, FieldNameCSharp = "PageName", Text = "PAGE", Description = null, IsVisible = null, IsReadOnly = null, Sort = null, IsExist = true });
                result.Add(new FrameworkConfigFieldBuiltIn() { Id = 20, ConfigGridId = 4, ConfigGridIdName = "Demo.Navigation; ", FieldId = 169, FieldIdName = "Demo.Navigation; ParentId", TableNameCSharp = "Demo.Navigation", ConfigName = null, FieldNameCSharp = "ParentId", Text = null, Description = null, IsVisible = true, IsReadOnly = null, Sort = null, IsExist = true });
                result.Add(new FrameworkConfigFieldBuiltIn() { Id = 21, ConfigGridId = 5, ConfigGridIdName = "Demo.RawOpenFlightsAirport; ", FieldId = 197, FieldIdName = "Demo.RawOpenFlightsAirport; AirportID", TableNameCSharp = "Demo.RawOpenFlightsAirport", ConfigName = null, FieldNameCSharp = "AirportID", Text = null, Description = null, IsVisible = false, IsReadOnly = null, Sort = null, IsExist = true });
                result.Add(new FrameworkConfigFieldBuiltIn() { Id = 22, ConfigGridId = 5, ConfigGridIdName = "Demo.RawOpenFlightsAirport; ", FieldId = 199, FieldIdName = "Demo.RawOpenFlightsAirport; City", TableNameCSharp = "Demo.RawOpenFlightsAirport", ConfigName = null, FieldNameCSharp = "City", Text = "My City", Description = "This is the city of the airport", IsVisible = null, IsReadOnly = null, Sort = null, IsExist = true });
                result.Add(new FrameworkConfigFieldBuiltIn() { Id = 23, ConfigGridId = 6, ConfigGridIdName = "Demo.RawWikipediaAircraft; ", FieldId = 215, FieldIdName = "Demo.RawWikipediaAircraft; IataCode", TableNameCSharp = "Demo.RawWikipediaAircraft", ConfigName = null, FieldNameCSharp = "IataCode", Text = "IATA Code", Description = null, IsVisible = null, IsReadOnly = null, Sort = null, IsExist = true });
                result.Add(new FrameworkConfigFieldBuiltIn() { Id = 24, ConfigGridId = 7, ConfigGridIdName = "Demo.RawWikipediaAircraft; G", FieldId = 215, FieldIdName = "Demo.RawWikipediaAircraft; IataCode", TableNameCSharp = "Demo.RawWikipediaAircraft", ConfigName = "G", FieldNameCSharp = "IataCode", Text = "IATA Code", Description = null, IsVisible = null, IsReadOnly = null, Sort = null, IsExist = true });
                result.Add(new FrameworkConfigFieldBuiltIn() { Id = 25, ConfigGridId = 7, ConfigGridIdName = "Demo.RawWikipediaAircraft; G", FieldId = 214, FieldIdName = "Demo.RawWikipediaAircraft; IcaoCode", TableNameCSharp = "Demo.RawWikipediaAircraft", ConfigName = "G", FieldNameCSharp = "IcaoCode", Text = "ICAO Code", Description = null, IsVisible = null, IsReadOnly = true, Sort = null, IsExist = true });
                result.Add(new FrameworkConfigFieldBuiltIn() { Id = 26, ConfigGridId = 6, ConfigGridIdName = "Demo.RawWikipediaAircraft; ", FieldId = 214, FieldIdName = "Demo.RawWikipediaAircraft; IcaoCode", TableNameCSharp = "Demo.RawWikipediaAircraft", ConfigName = null, FieldNameCSharp = "IcaoCode", Text = "ICAO Code", Description = null, IsVisible = null, IsReadOnly = true, Sort = null, IsExist = true });
                result.Add(new FrameworkConfigFieldBuiltIn() { Id = 27, ConfigGridId = 6, ConfigGridIdName = "Demo.RawWikipediaAircraft; ", FieldId = 216, FieldIdName = "Demo.RawWikipediaAircraft; Model", TableNameCSharp = "Demo.RawWikipediaAircraft", ConfigName = null, FieldNameCSharp = "Model", Text = "Image", Description = null, IsVisible = null, IsReadOnly = null, Sort = null, IsExist = true });
                result.Add(new FrameworkConfigFieldBuiltIn() { Id = 28, ConfigGridId = 7, ConfigGridIdName = "Demo.RawWikipediaAircraft; G", FieldId = 216, FieldIdName = "Demo.RawWikipediaAircraft; Model", TableNameCSharp = "Demo.RawWikipediaAircraft", ConfigName = "G", FieldNameCSharp = "Model", Text = "Image", Description = null, IsVisible = null, IsReadOnly = null, Sort = null, IsExist = true });
                result.Add(new FrameworkConfigFieldBuiltIn() { Id = 29, ConfigGridId = 7, ConfigGridIdName = "Demo.RawWikipediaAircraft; G", FieldId = 219, FieldIdName = "Demo.RawWikipediaAircraft; ModelImageUrl", TableNameCSharp = "Demo.RawWikipediaAircraft", ConfigName = "G", FieldNameCSharp = "ModelImageUrl", Text = "Image Link", Description = null, IsVisible = null, IsReadOnly = null, Sort = null, IsExist = true });
                result.Add(new FrameworkConfigFieldBuiltIn() { Id = 30, ConfigGridId = 6, ConfigGridIdName = "Demo.RawWikipediaAircraft; ", FieldId = 219, FieldIdName = "Demo.RawWikipediaAircraft; ModelImageUrl", TableNameCSharp = "Demo.RawWikipediaAircraft", ConfigName = null, FieldNameCSharp = "ModelImageUrl", Text = "Image Link", Description = null, IsVisible = null, IsReadOnly = null, Sort = null, IsExist = true });
                result.Add(new FrameworkConfigFieldBuiltIn() { Id = 31, ConfigGridId = 6, ConfigGridIdName = "Demo.RawWikipediaAircraft; ", FieldId = 218, FieldIdName = "Demo.RawWikipediaAircraft; ModelTitle", TableNameCSharp = "Demo.RawWikipediaAircraft", ConfigName = null, FieldNameCSharp = "ModelTitle", Text = "Title", Description = null, IsVisible = null, IsReadOnly = null, Sort = null, IsExist = true });
                result.Add(new FrameworkConfigFieldBuiltIn() { Id = 32, ConfigGridId = 7, ConfigGridIdName = "Demo.RawWikipediaAircraft; G", FieldId = 218, FieldIdName = "Demo.RawWikipediaAircraft; ModelTitle", TableNameCSharp = "Demo.RawWikipediaAircraft", ConfigName = "G", FieldNameCSharp = "ModelTitle", Text = "Title", Description = null, IsVisible = null, IsReadOnly = null, Sort = null, IsExist = true });
                result.Add(new FrameworkConfigFieldBuiltIn() { Id = 33, ConfigGridId = 7, ConfigGridIdName = "Demo.RawWikipediaAircraft; G", FieldId = 217, FieldIdName = "Demo.RawWikipediaAircraft; ModelUrl", TableNameCSharp = "Demo.RawWikipediaAircraft", ConfigName = "G", FieldNameCSharp = "ModelUrl", Text = "Url", Description = null, IsVisible = null, IsReadOnly = null, Sort = null, IsExist = true });
                result.Add(new FrameworkConfigFieldBuiltIn() { Id = 34, ConfigGridId = 6, ConfigGridIdName = "Demo.RawWikipediaAircraft; ", FieldId = 217, FieldIdName = "Demo.RawWikipediaAircraft; ModelUrl", TableNameCSharp = "Demo.RawWikipediaAircraft", ConfigName = null, FieldNameCSharp = "ModelUrl", Text = "Url", Description = null, IsVisible = null, IsReadOnly = null, Sort = null, IsExist = true });
                return result;
            }
        }
    }
}

namespace DatabaseBuiltIn.Demo
{
    using System.Collections.Generic;
    using Database.Demo;

    public static class NavigationBuiltInTableApplicationCli
    {
        public static List<NavigationBuiltIn> RowList
        {
            get
            {
                var result = new List<NavigationBuiltIn>();
                result.Add(new NavigationBuiltIn() { Id = 1, IdName = "Home", ParentId = null, ParentIdName = null, Name = "Home", TextHtml = "<i class=\"fas fa-home\"></i> Home", PageName = "Home", Sort = null });
                result.Add(new NavigationBuiltIn() { Id = 2, IdName = "Contact", ParentId = null, ParentIdName = null, Name = "Contact", TextHtml = "<i class=\"fas fa-address-card\"></i> Contact", PageName = null, Sort = null });
                result.Add(new NavigationBuiltIn() { Id = 3, IdName = "About", ParentId = null, ParentIdName = null, Name = "About", TextHtml = "<i class=\"fas fa-bullhorn\"></i> About", PageName = "About", Sort = null });
                result.Add(new NavigationBuiltIn() { Id = 4, IdName = "LoginUser", ParentId = null, ParentIdName = null, Name = "LoginUser", TextHtml = "<i class=\"fas fa-user\"></i> User", PageName = "LoginUser", Sort = null });
                result.Add(new NavigationBuiltIn() { Id = 5, IdName = "Calendar", ParentId = null, ParentIdName = null, Name = "Calendar", TextHtml = "<i class=\"far fa-calendar\"></i> Calendar", PageName = null, Sort = null });
                result.Add(new NavigationBuiltIn() { Id = 6, IdName = "Roadmap", ParentId = null, ParentIdName = null, Name = "Roadmap", TextHtml = "<i class=\"fas fa-road\"></i> Roadmap", PageName = "Roadmap", Sort = null });
                result.Add(new NavigationBuiltIn() { Id = 7, IdName = "LoginRole", ParentId = 4, ParentIdName = "LoginUser", Name = "LoginRole", TextHtml = "<i class=\'fas fa-hat-cowboy\'></i> Role", PageName = "LoginRole", Sort = 1 });
                result.Add(new NavigationBuiltIn() { Id = 8, IdName = "Airport", ParentId = 1, ParentIdName = "Home", Name = "Airport", TextHtml = "<i class=\"fas fa-plane-departure\"></i> Airport", PageName = "Airport", Sort = null });
                return result;
            }
        }
    }

    public static class LoginRoleBuiltInTableApplicationCli
    {
        public static List<LoginRoleBuiltIn> RowList
        {
            get
            {
                var result = new List<LoginRoleBuiltIn>();
                result.Add(new LoginRoleBuiltIn() { Id = 1, IdName = "Administrator", Name = "Administrator", Description = "Administrator role" });
                result.Add(new LoginRoleBuiltIn() { Id = 2, IdName = "Guest", Name = "Guest", Description = "Guest user (not logged in)" });
                result.Add(new LoginRoleBuiltIn() { Id = 3, IdName = "BackOffice", Name = "BackOffice", Description = "Power user" });
                return result;
            }
        }
    }

    public static class LoginRolePermissionBuiltInTableApplicationCli
    {
        public static List<LoginRolePermissionBuiltIn> RowList
        {
            get
            {
                var result = new List<LoginRolePermissionBuiltIn>();
                result.Add(new LoginRolePermissionBuiltIn() { Id = 1, LoginRoleId = 1, LoginRoleIdName = "Administrator", LoginPermissionId = 1, LoginPermissionIdName = "Calendar Modify", IsActive = true });
                result.Add(new LoginRolePermissionBuiltIn() { Id = 2, LoginRoleId = 1, LoginRoleIdName = "Administrator", LoginPermissionId = 2, LoginPermissionIdName = "Roadmap Modify", IsActive = true });
                result.Add(new LoginRolePermissionBuiltIn() { Id = 3, LoginRoleId = 3, LoginRoleIdName = "BackOffice", LoginPermissionId = 1, LoginPermissionIdName = "Calendar Modify", IsActive = true });
                result.Add(new LoginRolePermissionBuiltIn() { Id = 4, LoginRoleId = 3, LoginRoleIdName = "BackOffice", LoginPermissionId = 2, LoginPermissionIdName = "Roadmap Modify", IsActive = true });
                result.Add(new LoginRolePermissionBuiltIn() { Id = 5, LoginRoleId = 2, LoginRoleIdName = "Guest", LoginPermissionId = 1, LoginPermissionIdName = "Calendar Modify", IsActive = false });
                result.Add(new LoginRolePermissionBuiltIn() { Id = 6, LoginRoleId = 2, LoginRoleIdName = "Guest", LoginPermissionId = 2, LoginPermissionIdName = "Roadmap Modify", IsActive = false });
                result.Add(new LoginRolePermissionBuiltIn() { Id = 7, LoginRoleId = 1, LoginRoleIdName = "Administrator", LoginPermissionId = 3, LoginPermissionIdName = "Language Modify", IsActive = true });
                result.Add(new LoginRolePermissionBuiltIn() { Id = 8, LoginRoleId = 2, LoginRoleIdName = "Guest", LoginPermissionId = 4, LoginPermissionIdName = "AirportPage Show", IsActive = true });
                result.Add(new LoginRolePermissionBuiltIn() { Id = 9, LoginRoleId = 1, LoginRoleIdName = "Administrator", LoginPermissionId = 4, LoginPermissionIdName = "AirportPage Show", IsActive = true });
                return result;
            }
        }
    }

    public static class LoginUserBuiltInTableApplicationCli
    {
        public static List<LoginUserBuiltIn> RowList
        {
            get
            {
                var result = new List<LoginUserBuiltIn>();
                result.Add(new LoginUserBuiltIn() { Id = 1, IdName = "John", Name = "John", Password = "J33" });
                result.Add(new LoginUserBuiltIn() { Id = 2, IdName = "Marc", Name = "Marc", Password = "DAdkm" });
                result.Add(new LoginUserBuiltIn() { Id = 3, IdName = "Guest", Name = "Guest", Password = "Guest33" });
                result.Add(new LoginUserBuiltIn() { Id = 4, IdName = "Administrator", Name = "Administrator", Password = null });
                return result;
            }
        }
    }

    public static class LoginUserRoleBuiltInTableApplicationCli
    {
        public static List<LoginUserRoleBuiltIn> RowList
        {
            get
            {
                var result = new List<LoginUserRoleBuiltIn>();
                result.Add(new LoginUserRoleBuiltIn() { Id = 1, LoginUserId = 3, LoginUserIdName = "Guest", LoginRoleId = 1, LoginRoleIdName = "Administrator", IsActive = false });
                result.Add(new LoginUserRoleBuiltIn() { Id = 2, LoginUserId = 3, LoginUserIdName = "Guest", LoginRoleId = 2, LoginRoleIdName = "Guest", IsActive = true });
                result.Add(new LoginUserRoleBuiltIn() { Id = 3, LoginUserId = 3, LoginUserIdName = "Guest", LoginRoleId = 3, LoginRoleIdName = "BackOffice", IsActive = false });
                result.Add(new LoginUserRoleBuiltIn() { Id = 4, LoginUserId = 4, LoginUserIdName = "Administrator", LoginRoleId = 1, LoginRoleIdName = "Administrator", IsActive = true });
                result.Add(new LoginUserRoleBuiltIn() { Id = 5, LoginUserId = 4, LoginUserIdName = "Administrator", LoginRoleId = 2, LoginRoleIdName = "Guest", IsActive = true });
                result.Add(new LoginUserRoleBuiltIn() { Id = 6, LoginUserId = 4, LoginUserIdName = "Administrator", LoginRoleId = 3, LoginRoleIdName = "BackOffice", IsActive = true });
                result.Add(new LoginUserRoleBuiltIn() { Id = 7, LoginUserId = 2, LoginUserIdName = "Marc", LoginRoleId = 2, LoginRoleIdName = "Guest", IsActive = true });
                result.Add(new LoginUserRoleBuiltIn() { Id = 8, LoginUserId = 1, LoginUserIdName = "John", LoginRoleId = 2, LoginRoleIdName = "Guest", IsActive = null });
                result.Add(new LoginUserRoleBuiltIn() { Id = 9, LoginUserId = 1, LoginUserIdName = "John", LoginRoleId = 3, LoginRoleIdName = "BackOffice", IsActive = true });
                return result;
            }
        }
    }
}
